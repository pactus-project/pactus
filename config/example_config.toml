### This configuration file specifies configurations for running a Pactus node.

# `node` contains configuration options for the Pactus node.
[node]

  # `num_validators` specifies the number of validators (consensus instances) to run on this node.
  num_validators = %num_validators%

  # `reward_addresses` specifies the addresses for collecting rewards.
  # If it is empty, reward addresses will be obtained from the wallet.
  # The number of reward addresses should be the same as the number of validators.
 ## reward_addresses = []

# `store` contains configuration options for the store module, which manages storage and retrieval of blockchain data.
[store]

  # `path` specifies the directory where blockchain data will be stored.
  # Default is data
 ## path = "data"

# `network` contains configuration options for the network module, which manages communication between nodes.
[network]

  # `name` specifies the name of the network. For the mainnet, this should be set to "pactus".
 ## name = "pactus"

  # `listens` specifies the addresses and ports where the node will listen for incoming connections from other nodes.
 ## listens = ["/ip4/0.0.0.0/tcp/21777", "/ip6/::/tcp/21777"]

  # `network_key` specifies the private key filename to use for node authentication and encryption in the p2p protocol.
 ## network_key = "network_key"

  # `enable_nat` indicates whether NAT service should be enabled or not.
  # NAT service allows many machines to share a single public address.
  # Default is true.
 ## enable_nat = true

  # `enable_relay` indicates whether relay service  should be enabled or not.
  # Relay service is a transport protocol that routes traffic between two peers over a third-party “relay” peer.
  # Default is true.
 ## enable_relay = false

  # `relay_addresses` provides the necessary relay addresses. These should be specified if 'enable_relay' is 'true'.
  # Note: this parameter will be ignored if 'enable_relay' is 'false'.
 ## relay_addresses = []

  # `enable_mdns` indicates whether MDNS should be enabled or not.
  # MDNS is a protocol to discover local peers quickly and efficiently.
  # Default is false.
 ## enable_mdns = false

  # `enable_metrics` if enabled, it provides network metrics for the Prometheus software.
  # Default is false.
 ## enable_metrics = false

    # `network.bootstrap` contains configuration for bootstrapping the node.
  [network.bootstrap]

    # `addresses` is a list of peer addresses needed for peer discovery.
    # These addresses are used by the Pactus node to discover and connect to other peers on the network.
   ## addresses = ["/ip4/172.104.46.145/tcp/21777/p2p/12D3KooWNYD4bB82YZRXv6oNyYPwc5ozabx2epv75ATV3D8VD3Mq"]

    # `min_threshold` is the minimum number of connections that the Pactus node should maintain.
    # Default is 8
   ## min_threshold = 8

    # `max_threshold` is the maximum number of connections that the Pactus node should maintain.
    # Default is 16
   ## max_threshold = 16

    # `period` periodically checks to see if the threshold is maintained.
    # Default is 1 minute
   ## period = "1m0s"

# `sync` contains configuration of sync module.
[sync]

  # `moniker` is a custom human-readable name for this node.
 ## moniker = ""

  # `heartbeat_timer` is a timer for broadcasting a heartbeat message to the network.
  # Default is 5 seconds
  # Set the value to zero e.g heartbeat_timer = "0s" to disable heartbeat broadcasing.
 ## heartbeat_timer = "5s"

  # `session_timeout` is a timeout for a session to be opened.
  # Default is 10 seconds
 ## session_timeout = "10s"

  # `max_open_sessions` is the maximum number of open sessions.
  # Default is 8
 ## max_open_sessions = 8

  # `block_per_message` is the number of blocks per message.
  # Default is 60.
 ## block_per_message = 60

  # `cache_size` is the total capacity of the cache pool.
  # Default is 50000
 ## cache_size = 50000

  # `node_network` indicates whether the node is capable of serving the complete blockchain.
  # Default is true
 ## node_network = true

  # `sync.firewall` contains configuration options for the sync firewall.
  [sync.firewall]
    # `enable` indicates whether the firewall should be enabled or not.
    # Default is false
   ## enable = false

# `tx_pool` contains configuration options for the transaction pool module.
[tx_pool]

  # `max_size` indicates the maximum number of unconfirmed transactions inside the pool.
  # Default is 2000
 ## max_size = 2000

# `consensus` contains configuration options for the consensus module.
[consensus]

  # `change_proposer_timeout` describes how long to wait for a proposal in
  # each round before requesting a change of proposer.
  # Default is 6 seconds.
 ## change_proposer_timeout = "6s"

  # `change_proposer_delta` increases `change_proposer_timeout` with each round.
  # Default is 2 seconds.
 ## change_proposer_delta = "2s"

# `logger` contains configuration options for the logger.
[logger]
  # `colorful` indicates whether log can be colorful or not.
  # Default is true.
 ## colorful = true

  # `logger.levels` contains the level of logger per module.
  # Available log levels are:
  #   "trace", "debug", "info", "warning", and "error".
  [logger.levels]
   ## _consensus = "info"
   ## _grpc = "error"
   ## _http = "error"
   ## _network = "info"
   ## _pool = "error"
   ## _state = "info"
   ## _sync = "warning"
   ## default = "info"

# `grpc` contains configuration of the gRRC module.
[grpc]

  # `enable` indicates whether gRPC service should be enabled or not.
  # Default is false
 ## enable = false

  # `listen` is the address to listen for incoming connections for gRPC server.
 ## listen = ""

  # `grpc.gateway` contains configuration for the gRPC Gateway server
  # which translates a RESTful HTTP API into gRPC.
  [grpc.gateway]

    # `enable` indicates whether gRPCGateway service should be enabled or not.
    # Default is false
   ## enable = false

    # `listen` is the address to listen for incoming connections for gRPCGateway server.
   ## listen = ""

    # `enable_cors` indicates whether Cross-Origin Request Sharing (CORS)
    # protection should be enabled or not.
    # Default is false
   ## enable_cors = false

# `http` configuration.
[http]

  # `enable` indicates whether HTTP service should be enabled or not.
  # Default is false
 ## enable = false

  # `listen` is the address address to listen for incoming connections for HTTP server.
 ## listen = ""

# Nanomsg configuration.
[nanomsg]

  # `enable` indicates whether nanomsg service should be enabled or not.
  # Default is false
 ## enable = false

  # `listen` is the address to listen for incoming connections for nanomsg server.
 ## listen = ""
