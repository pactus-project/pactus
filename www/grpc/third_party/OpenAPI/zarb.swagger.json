{
  "swagger": "2.0",
  "info": {
    "title": "zarb.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Zarb"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/account/address/{address}": {
      "get": {
        "operationId": "Zarb_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zarbAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "verbosity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Zarb"
        ]
      }
    },
    "/api/block/height/{height}": {
      "get": {
        "operationId": "Zarb_GetBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zarbBlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "verbosity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Zarb"
        ]
      }
    },
    "/api/block_height/{hash}": {
      "get": {
        "operationId": "Zarb_GetBlockHeight",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zarbBlockHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Zarb"
        ]
      }
    },
    "/api/blockchain": {
      "get": {
        "operationId": "Zarb_GetBlockchainInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zarbBlockchainInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Zarb"
        ]
      }
    },
    "/api/network": {
      "get": {
        "operationId": "Zarb_GetNetworkInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zarbNetworkInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Zarb"
        ]
      }
    },
    "/api/send_raw_transaction/{data}": {
      "put": {
        "operationId": "Zarb_SendRawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zarbSendRawTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Zarb"
        ]
      }
    },
    "/api/tranaction/id/{id}": {
      "get": {
        "operationId": "Zarb_GetTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zarbTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "verbosity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Zarb"
        ]
      }
    },
    "/api/validators": {
      "get": {
        "operationId": "Zarb_GetValidators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zarbValidatorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "verbosity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Zarb"
        ]
      }
    },
    "/api/validators/address/{address}": {
      "get": {
        "operationId": "Zarb_GetValidator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zarbValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "verbosity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Zarb"
        ]
      }
    },
    "/api/validators/{number}": {
      "get": {
        "operationId": "Zarb_GetValidatorByNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zarbValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "verbosity",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Zarb"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "zarbAccountResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        },
        "json": {
          "type": "string"
        }
      }
    },
    "zarbBlockHeightResponse": {
      "type": "object"
    },
    "zarbBlockResponse": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "blockTime": {
          "type": "string",
          "format": "date-time"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "json": {
          "type": "string"
        }
      }
    },
    "zarbBlockchainInfoResponse": {
      "type": "object"
    },
    "zarbNetworkInfoResponse": {
      "type": "object",
      "properties": {
        "peerId": {
          "type": "string"
        },
        "peers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/zarbPeer"
          }
        }
      }
    },
    "zarbPeer": {
      "type": "object",
      "properties": {
        "moniker": {
          "type": "string"
        },
        "nodeVersion": {
          "type": "string",
          "format": "byte"
        },
        "peerId": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "initialBlockDownload": {
          "type": "boolean"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "receivedMessages": {
          "type": "integer",
          "format": "int32"
        },
        "invalidMessages": {
          "type": "integer",
          "format": "int32"
        },
        "receivedBytes": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "zarbSendRawTransactionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        },
        "json": {
          "type": "string"
        }
      }
    },
    "zarbTransactionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        },
        "json": {
          "type": "string"
        }
      }
    },
    "zarbValidator": {
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "string",
          "format": "byte"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "stake": {
          "type": "string",
          "format": "int64"
        },
        "bondingHeight": {
          "type": "integer",
          "format": "int32"
        },
        "lastJoinedHeight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "zarbValidatorResponse": {
      "type": "object",
      "properties": {
        "validator": {
          "$ref": "#/definitions/zarbValidator"
        }
      }
    },
    "zarbValidatorsResponse": {
      "type": "object",
      "properties": {
        "validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/zarbValidator"
          }
        }
      }
    }
  }
}
