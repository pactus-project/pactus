syntax = 'proto3';
package pactus;

option go_package = "github.com/pactus-project/pactus/www/grpc/pactus";
option java_package = "pactus.wallet";

import "transaction.proto";

service Wallet {
  rpc CreateWallet(CreateWalletRequest) returns (CreateWalletResponse);
  rpc LoadWallet(LoadWalletRequest) returns (LoadWalletResponse);
  rpc UnloadWallet(UnloadWalletRequest) returns (UnloadWalletResponse);
  rpc LockWallet(LockWalletRequest) returns (LockWalletResponse);
  rpc UnlockWallet(UnlockWalletRequest) returns (UnlockWalletResponse);
  rpc SignRawTransaction(SignRawTransactionRequest) returns (SignRawTransactionResponse);
  rpc GetValidatorAddress(GetValidatorAddressRequest) returns (GetValidatorAddressResponse);
}

message CreateWalletRequest {
  string wallet_name = 1;
  string mnemonic = 2;
  string language = 3;
  string password = 4;
}

message CreateWalletResponse { string wallet_name = 1; }

message LoadWalletRequest { string wallet_name = 1; }

message LoadWalletResponse { string wallet_name = 1; }

message UnloadWalletRequest { string wallet_name = 1; }

message UnloadWalletResponse { string wallet_name = 1; }

message LockWalletRequest { string wallet_name = 1; }

message LockWalletResponse { string wallet_name = 1; }

message GetValidatorAddressRequest{ string public_key = 1;}

message GetValidatorAddressResponse { string address = 1;}

message UnlockWalletRequest {
  string wallet_name = 1;
  string password = 2;
  int32 timeout = 3;
}

message UnlockWalletResponse { string wallet_name = 1; }

message SignRawTransactionRequest {
  string wallet_name = 1;
  bytes raw_transaction = 2;
  string password = 3;
}

message SignRawTransactionResponse {
  bytes transaction_id = 1;
  bytes signed_raw_transaction = 2;
}
