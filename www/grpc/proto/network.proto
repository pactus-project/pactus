syntax = 'proto3';
package pactus;

option go_package = "github.com/pactus-project/pactus/www/grpc/pactus";
option java_package = "pactus.network";

service Network {
  rpc GetNetworkInfo(GetNetworkInfoRequest) returns (GetNetworkInfoResponse);
  rpc GetNodeInfo(GetNodeInfoRequest) returns (GetNodeInfoResponse);
}

message GetNetworkInfoRequest {}

message GetNetworkInfoResponse {
  string network_name = 1;
  uint32 total_sent_bytes = 2;
  uint32 total_received_bytes = 3;
  uint32 connected_peers_count = 4;
  repeated PeerInfo connected_peers = 5;
  map<uint32, uint64> sent_bytes = 6;
  map<uint32, uint64> received_bytes = 7;
}

message GetNodeInfoRequest {}

message GetNodeInfoResponse {
  string moniker = 1;
  string agent = 2;
  bytes peer_id = 3;
  uint64 started_at = 4;
  string reachability = 5;
  repeated int32 services = 6;
  repeated string services_names = 7;
  repeated string addrs = 8;
  repeated string protocols = 9;
}

message PeerInfo {
  int32 status = 1;
  string moniker = 2;
  string agent = 3;
  bytes peer_id = 4;
  repeated string consensus_keys = 5;
  repeated string consensus_address = 6;
  uint32 services = 7;
  bytes last_block_hash = 8;
  uint32 height = 9;
  int32 received_messages = 10;
  int32 invalid_messages = 11;
  int64 last_sent = 12;
  int64 last_received = 13;
  map<int32, int64> sent_bytes = 14;
  map<int32, int64> received_bytes = 15;
  string address = 16;
  string direction = 17;
  repeated string protocols = 18;
  int32 total_sessions = 19;
  int32 completed_sessions = 20;
}
