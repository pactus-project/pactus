syntax = 'proto3';
package pactus;

option go_package = "github.com/pactus-project/pactus/www/grpc/pactus";
option java_package = "pactus.network";

service Network {
  rpc GetNetworkInfo(GetNetworkInfoRequest) returns (GetNetworkInfoResponse);
  rpc GetNodeInfo(GetNodeInfoRequest) returns (GetNodeInfoResponse);
}


message GetNetworkInfoRequest {}

message GetNetworkInfoResponse {
  int32 total_sent_bytes = 1;
  int32 total_received_bytes = 2;
  int64 started_at = 3;
  repeated PeerInfo peers = 4;
  map<int32, int64> sent_bytes = 5;
  map<int32, int64> received_bytes = 6;
}

message GetNodeInfoRequest {}

message GetNodeInfoResponse {
  string moniker = 1;
  string agent = 2;
  bytes peer_id = 3;
}

message PeerInfo {
  string moniker = 1;
  string agent = 2;
  bytes peer_id = 3;
  repeated string consensus_keys = 4;
  int32 flags = 5;
  uint32 height = 6;
  int32 received_messages = 7;
  int32 invalid_messages = 8;
  int32 received_bytes = 9;
  int32 status = 10;
  int64 last_sent = 11;
  int64 last_received = 12;
  int32 send_success = 13;
  int32 send_failed = 14;
  bytes last_block_hash = 15;
}
