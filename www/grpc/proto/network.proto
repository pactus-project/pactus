syntax = 'proto3';
package pactus;

option go_package = "github.com/pactus-project/pactus/www/grpc/pactus";
option java_package = "pactus.network";

service Network {
  rpc GetNetworkInfo(GetNetworkInfoRequest) returns (GetNetworkInfoResponse);
  rpc GetNodeInfo(GetNodeInfoRequest) returns (GetNodeInfoResponse);
}

message GetNetworkInfoRequest {}

message GetNetworkInfoResponse {
  int32 total_sent_bytes = 1;
  int32 total_received_bytes = 2;
  int64 started_at = 3;
  repeated PeerInfo peers = 4;
  map<int32, int64> sent_bytes = 5;
  map<int32, int64> received_bytes = 6;
}

message GetNodeInfoRequest {}

message GetNodeInfoResponse {
  string moniker = 1;
  string agent = 2;
  bytes peer_id = 3;
  string reachability = 4;
  repeated string addrs = 5;
}

message PeerInfo {
  int32 status = 1;
  string moniker = 2;
  string agent = 3;
  bytes peer_id = 4;
  repeated string consensus_keys = 5;
  uint32 services = 6;
  bytes last_block_hash = 7;
  uint32 height = 8;
  int32 received_messages = 9;
  int32 invalid_messages = 10;
  int64 last_sent = 11;
  int64 last_received = 12;
  map<int32, int64> sent_bytes = 13;
  map<int32, int64> received_bytes = 14;
  string address = 15;
  string direction = 16;
  repeated string protocols = 17;
  int32 total_sessions = 18;
  int32 completed_sessions = 19;
}
