{
  "swagger": "2.0",
  "info": {
    "title": "Pactus APIs",
    "description": "Each node in the Pactus network can be configured to use the [gRPC](https://grpc.io/) protocol for communication.\nHere you can find the list of all gRPC methods and messages.\n\nAll the amounts and values in gRPC endpoints are in NanoPAC units, which are atomic and the smallest unit in the Pactus blockchain.\nEach PAC is equivalent to 1,000,000,000 or 10\u003csup\u003e9\u003c/sup\u003e NanoPACs.\n",
    "version": "1.2",
    "contact": {
      "name": "Pactus Blockchain",
      "url": "https://pactus.org"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/pactus-project/pactus/blob/main/LICENSE"
    }
  },
  "tags": [
    {
      "name": "Transaction"
    },
    {
      "name": "Blockchain"
    },
    {
      "name": "Network"
    },
    {
      "name": "Utils"
    },
    {
      "name": "Wallet"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/pactus/Utils/sign_message_with_private_key": {
      "get": {
        "summary": "SignMessageWithPrivateKey sign message with provided private key.",
        "operationId": "Utils_SignMessageWithPrivateKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusSignMessageWithPrivateKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "privateKey",
            "description": "The private key to sign the message.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "message",
            "description": "The message to sign.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/pactus/Utils/verify_message": {
      "get": {
        "summary": "VerifyMessage verify signature with public key and message",
        "operationId": "Utils_VerifyMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusVerifyMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "message",
            "description": "The signed message.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "signature",
            "description": "The signature of the message.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "publicKey",
            "description": "The public key of the signer.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/pactus/blockchain/get_account": {
      "get": {
        "summary": "GetAccount retrieves information about an account based on the provided\naddress.",
        "operationId": "Blockchain_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "The address of the account to retrieve information for.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_block": {
      "get": {
        "summary": "GetBlock retrieves information about a block based on the provided request\nparameters.",
        "operationId": "Blockchain_GetBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetBlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "description": "The height of the block to retrieve.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "verbosity",
            "description": "The verbosity level for block information.\n\n - BLOCK_DATA: Request only block data.\n - BLOCK_INFO: Request block information and transaction IDs.\n - BLOCK_TRANSACTIONS: Request block information and detailed transaction data.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BLOCK_DATA",
              "BLOCK_INFO",
              "BLOCK_TRANSACTIONS"
            ],
            "default": "BLOCK_DATA"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_block_hash": {
      "get": {
        "summary": "GetBlockHash retrieves the hash of a block at the specified height.",
        "operationId": "Blockchain_GetBlockHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetBlockHashResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "description": "The height of the block to retrieve the hash for.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_block_height": {
      "get": {
        "summary": "GetBlockHeight retrieves the height of a block with the specified hash.",
        "operationId": "Blockchain_GetBlockHeight",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetBlockHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "The hash of the block to retrieve the height for.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_blockchain_info": {
      "get": {
        "summary": "GetBlockchainInfo retrieves general information about the blockchain.",
        "operationId": "Blockchain_GetBlockchainInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetBlockchainInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_consensus_info": {
      "get": {
        "summary": "GetConsensusInfo retrieves information about the consensus instances.",
        "operationId": "Blockchain_GetConsensusInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetConsensusInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_public_key": {
      "get": {
        "summary": "GetPublicKey retrieves the public key of an account based on the provided\naddress.",
        "operationId": "Blockchain_GetPublicKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetPublicKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "The address for which to retrieve the public key.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_txpool_content": {
      "get": {
        "summary": "GetTxPoolContent retrieves current transactions in the transaction pool.",
        "operationId": "Blockchain_GetTxPoolContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetTxPoolContentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "payloadType",
            "description": "The type of transactions to retrieve from the transaction pool. 0 means all\ntypes.\n\n - UNKNOWN: Unknown payload type.\n - TRANSFER_PAYLOAD: Transfer payload type.\n - BOND_PAYLOAD: Bond payload type.\n - SORTITION_PAYLOAD: Sortition payload type.\n - UNBOND_PAYLOAD: Unbond payload type.\n - WITHDRAW_PAYLOAD: Withdraw payload type.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "TRANSFER_PAYLOAD",
              "BOND_PAYLOAD",
              "SORTITION_PAYLOAD",
              "UNBOND_PAYLOAD",
              "WITHDRAW_PAYLOAD"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_validator": {
      "get": {
        "summary": "GetValidator retrieves information about a validator based on the provided\naddress.",
        "operationId": "Blockchain_GetValidator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "The address of the validator to retrieve information for.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_validator_by_number": {
      "get": {
        "summary": "GetValidatorByNumber retrieves information about a validator based on the\nprovided number.",
        "operationId": "Blockchain_GetValidatorByNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "number",
            "description": "The unique number of the validator to retrieve information for.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/network/get_network_info": {
      "get": {
        "summary": "GetNetworkInfo retrieves information about the overall network.",
        "operationId": "Network_GetNetworkInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetNetworkInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "onlyConnected",
            "description": "If true, only returns peers with connected status.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Network"
        ]
      }
    },
    "/pactus/network/get_node_info": {
      "get": {
        "summary": "GetNodeInfo retrieves information about a specific node in the network.",
        "operationId": "Network_GetNodeInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetNodeInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Network"
        ]
      }
    },
    "/pactus/transaction/broadcast_transaction": {
      "put": {
        "summary": "BroadcastTransaction broadcasts a signed transaction to the network.",
        "operationId": "Transaction_BroadcastTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusBroadcastTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "signedRawTransaction",
            "description": "The signed raw transaction data to be broadcasted.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/calculate_fee": {
      "get": {
        "summary": "CalculateFee calculates the transaction fee based on the specified amount\nand payload type.",
        "operationId": "Transaction_CalculateFee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusCalculateFeeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "amount",
            "description": "The amount involved in the transaction, specified in NanoPAC.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "payloadType",
            "description": "The type of transaction payload.\n\n - UNKNOWN: Unknown payload type.\n - TRANSFER_PAYLOAD: Transfer payload type.\n - BOND_PAYLOAD: Bond payload type.\n - SORTITION_PAYLOAD: Sortition payload type.\n - UNBOND_PAYLOAD: Unbond payload type.\n - WITHDRAW_PAYLOAD: Withdraw payload type.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "TRANSFER_PAYLOAD",
              "BOND_PAYLOAD",
              "SORTITION_PAYLOAD",
              "UNBOND_PAYLOAD",
              "WITHDRAW_PAYLOAD"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "fixedAmount",
            "description": "Indicates if the amount should be fixed and include the fee.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/get_raw_bond_transaction": {
      "get": {
        "summary": "GetRawBondTransaction retrieves raw details of a bond transaction.",
        "operationId": "Transaction_GetRawBondTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetRawTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lockTime",
            "description": "The lock time for the transaction. If not set, defaults to the last block\nheight.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sender",
            "description": "The sender's account address.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "receiver",
            "description": "The receiver's validator address.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stake",
            "description": "The stake amount in NanoPAC. Must be greater than 0.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "publicKey",
            "description": "The public key of the validator.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fee",
            "description": "The transaction fee in NanoPAC. If not set, it is set to the estimated fee.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "memo",
            "description": "A memo string for the transaction.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/get_raw_transfer_transaction": {
      "get": {
        "summary": "GetRawTransferTransaction retrieves raw details of a transfer transaction.",
        "operationId": "Transaction_GetRawTransferTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetRawTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lockTime",
            "description": "The lock time for the transaction. If not set, defaults to the last block\nheight.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sender",
            "description": "The sender's account address.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "receiver",
            "description": "The receiver's account address.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "amount",
            "description": "The amount to be transferred, specified in NanoPAC. Must be greater than 0.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fee",
            "description": "The transaction fee in NanoPAC. If not set, it is set to the estimated fee.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "memo",
            "description": "A memo string for the transaction.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/get_raw_unbond_transaction": {
      "get": {
        "summary": "GetRawUnbondTransaction retrieves raw details of an unbond transaction.",
        "operationId": "Transaction_GetRawUnbondTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetRawTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lockTime",
            "description": "The lock time for the transaction. If not set, defaults to the last block\nheight.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "validatorAddress",
            "description": "The address of the validator to unbond from.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memo",
            "description": "A memo string for the transaction.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/get_raw_withdraw_transaction": {
      "get": {
        "summary": "GetRawWithdrawTransaction retrieves raw details of a withdraw transaction.",
        "operationId": "Transaction_GetRawWithdrawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetRawTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lockTime",
            "description": "The lock time for the transaction. If not set, defaults to the last block\nheight.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "validatorAddress",
            "description": "The address of the validator to withdraw from.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountAddress",
            "description": "The address of the account to withdraw to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "amount",
            "description": "The withdrawal amount in NanoPAC. Must be greater than 0.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fee",
            "description": "The transaction fee in NanoPAC. If not set, it is set to the estimated fee.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "memo",
            "description": "A memo string for the transaction.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/get_transaction": {
      "get": {
        "summary": "GetTransaction retrieves transaction details based on the provided request\nparameters.",
        "operationId": "Transaction_GetTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The unique ID of the transaction to retrieve.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "verbosity",
            "description": "The verbosity level for transaction details.\n\n - TRANSACTION_DATA: Request transaction data only.\n - TRANSACTION_INFO: Request detailed transaction information.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TRANSACTION_DATA",
              "TRANSACTION_INFO"
            ],
            "default": "TRANSACTION_DATA"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/wallet/create_wallet": {
      "get": {
        "summary": "CreateWallet creates a new wallet with the specified parameters.",
        "operationId": "Wallet_CreateWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusCreateWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "The name of the new wallet.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "The password for securing the wallet.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/get_new_address": {
      "get": {
        "summary": "GetNewAddress generates a new address for the specified wallet.",
        "operationId": "Wallet_GetNewAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetNewAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "The name of the wallet to generate a new address.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "addressType",
            "description": "The type of address to generate.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ADDRESS_TYPE_TREASURY",
              "ADDRESS_TYPE_VALIDATOR",
              "ADDRESS_TYPE_BLS_ACCOUNT"
            ],
            "default": "ADDRESS_TYPE_TREASURY"
          },
          {
            "name": "label",
            "description": "A label for the new address.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/get_total_balance": {
      "get": {
        "summary": "GetTotalBalance returns the total available balance of the wallet.",
        "operationId": "Wallet_GetTotalBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetTotalBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "The name of the wallet to get the total balance.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/get_validator_address": {
      "get": {
        "summary": "GetValidatorAddress retrieves the validator address associated with a\npublic key.",
        "operationId": "Wallet_GetValidatorAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetValidatorAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "publicKey",
            "description": "The public key for which the validator address is requested.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/load_wallet": {
      "get": {
        "summary": "LoadWallet loads an existing wallet with the given name.",
        "operationId": "Wallet_LoadWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusLoadWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "The name of the wallet to load.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/restore_wallet": {
      "get": {
        "summary": "RestoreWallet restores an existing wallet with the given mnemonic.",
        "operationId": "Wallet_RestoreWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusRestoreWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "The name of the wallet to restore.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mnemonic",
            "description": "The mnemonic for wallet recovery.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "The password for securing the wallet.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/sign_message": {
      "get": {
        "summary": "SignMessage signs an arbitrary message.",
        "operationId": "Wallet_SignMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusSignMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "The name of the wallet.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "The password for unlocking the wallet for signing.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "address",
            "description": "The account address associated with the private key.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "message",
            "description": "The arbitrary message to be signed.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/sign_raw_transaction": {
      "get": {
        "summary": "SignRawTransaction signs a raw transaction for a specified wallet.",
        "operationId": "Wallet_SignRawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusSignRawTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "The name of the wallet used for signing.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rawTransaction",
            "description": "The raw transaction data to be signed.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "The password for unlocking the wallet for signing.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/unload_wallet": {
      "get": {
        "summary": "UnloadWallet unloads a currently loaded wallet with the specified name.",
        "operationId": "Wallet_UnloadWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusUnloadWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "The name of the wallet to unload.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    }
  },
  "definitions": {
    "pactusAccountInfo": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "The hash of the account."
        },
        "data": {
          "type": "string",
          "description": "The serialized data of the account."
        },
        "number": {
          "type": "integer",
          "format": "int32",
          "description": "The unique number assigned to the account."
        },
        "balance": {
          "type": "string",
          "format": "int64",
          "description": "The balance of the account in NanoPAC."
        },
        "address": {
          "type": "string",
          "description": "The address of the account."
        }
      },
      "description": "Message containing information about an account."
    },
    "pactusAddressInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "The address string."
        },
        "publicKey": {
          "type": "string",
          "description": "The public key associated with the address."
        },
        "label": {
          "type": "string",
          "description": "A label associated with the address."
        },
        "path": {
          "type": "string",
          "description": "The Hierarchical Deterministic path of the address within the wallet."
        }
      },
      "description": "Message containing address information."
    },
    "pactusAddressType": {
      "type": "string",
      "enum": [
        "ADDRESS_TYPE_TREASURY",
        "ADDRESS_TYPE_VALIDATOR",
        "ADDRESS_TYPE_BLS_ACCOUNT"
      ],
      "default": "ADDRESS_TYPE_TREASURY",
      "description": "Enum for the address type."
    },
    "pactusBlockHeaderInfo": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "The version of the block."
        },
        "prevBlockHash": {
          "type": "string",
          "description": "The hash of the previous block."
        },
        "stateRoot": {
          "type": "string",
          "description": "The state root hash of the blockchain."
        },
        "sortitionSeed": {
          "type": "string",
          "description": "The sortition seed of the block."
        },
        "proposerAddress": {
          "type": "string",
          "description": "The address of the proposer of the block."
        }
      },
      "description": "Message containing information about the header of a block."
    },
    "pactusBlockVerbosity": {
      "type": "string",
      "enum": [
        "BLOCK_DATA",
        "BLOCK_INFO",
        "BLOCK_TRANSACTIONS"
      ],
      "default": "BLOCK_DATA",
      "description": "Enumeration for verbosity levels when requesting block information.\n\n - BLOCK_DATA: Request only block data.\n - BLOCK_INFO: Request block information and transaction IDs.\n - BLOCK_TRANSACTIONS: Request block information and detailed transaction data."
    },
    "pactusBroadcastTransactionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the broadcasted transaction."
        }
      },
      "description": "Response message containing the ID of the broadcasted transaction."
    },
    "pactusCalculateFeeResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "int64",
          "description": "The calculated amount in NanoPAC."
        },
        "fee": {
          "type": "string",
          "format": "int64",
          "description": "The calculated transaction fee in NanoPAC."
        }
      },
      "description": "Response message containing the calculated transaction fee."
    },
    "pactusCertificateInfo": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "The hash of the certificate."
        },
        "round": {
          "type": "integer",
          "format": "int32",
          "description": "The round of the certificate."
        },
        "committers": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "List of committers in the certificate."
        },
        "absentees": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "List of absentees in the certificate."
        },
        "signature": {
          "type": "string",
          "description": "The signature of the certificate."
        }
      },
      "description": "Message containing information about a certificate."
    },
    "pactusConnectionInfo": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "string",
          "format": "uint64",
          "description": "Total number of connections."
        },
        "inboundConnections": {
          "type": "string",
          "format": "uint64",
          "description": "Number of inbound connections."
        },
        "outboundConnections": {
          "type": "string",
          "format": "uint64",
          "description": "Number of outbound connections."
        }
      },
      "description": "Response message containing information about the node's connections."
    },
    "pactusConsensusInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "The address of the consensus instance."
        },
        "active": {
          "type": "boolean",
          "description": "Indicates whether the consensus instance is active and part of the\ncommittee."
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "description": "The height of the consensus instance."
        },
        "round": {
          "type": "integer",
          "format": "int32",
          "description": "The round of the consensus instance."
        },
        "votes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusVoteInfo"
          },
          "description": "List of votes in the consensus instance."
        }
      },
      "description": "Message containing information about a consensus instance."
    },
    "pactusCreateWalletResponse": {
      "type": "object",
      "properties": {
        "mnemonic": {
          "type": "string",
          "description": "The mnemonic for wallet recovery."
        }
      },
      "description": "Response message containing the mnemonic for wallet recovery."
    },
    "pactusGetAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/pactusAccountInfo",
          "description": "Detailed information about the account."
        }
      },
      "description": "Message containing the response with account information."
    },
    "pactusGetAddressHistoryResponse": {
      "type": "object",
      "properties": {
        "historyInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusHistoryInfo"
          },
          "description": "Array of history information for the address."
        }
      },
      "description": "Response message containing the address transaction history."
    },
    "pactusGetBlockHashResponse": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "The hash of the block."
        }
      },
      "description": "Message containing the response with the block hash."
    },
    "pactusGetBlockHeightResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "format": "int64",
          "description": "The height of the block."
        }
      },
      "description": "Message containing the response with the block height."
    },
    "pactusGetBlockResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "format": "int64",
          "description": "The height of the block."
        },
        "hash": {
          "type": "string",
          "description": "The hash of the block."
        },
        "data": {
          "type": "string",
          "description": "Block data, available only if verbosity level is set to BLOCK_DATA."
        },
        "blockTime": {
          "type": "integer",
          "format": "int64",
          "description": "The timestamp of the block."
        },
        "header": {
          "$ref": "#/definitions/pactusBlockHeaderInfo",
          "description": "Header information of the block."
        },
        "prevCert": {
          "$ref": "#/definitions/pactusCertificateInfo",
          "description": "Certificate information of the previous block."
        },
        "txs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusTransactionInfo"
          },
          "description": "List of transactions in the block, available when verbosity level is set to\nBLOCK_TRANSACTIONS."
        }
      },
      "description": "Message containing the response with block information."
    },
    "pactusGetBlockchainInfoResponse": {
      "type": "object",
      "properties": {
        "lastBlockHeight": {
          "type": "integer",
          "format": "int64",
          "description": "The height of the last block in the blockchain."
        },
        "lastBlockHash": {
          "type": "string",
          "description": "The hash of the last block in the blockchain."
        },
        "totalAccounts": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of accounts in the blockchain."
        },
        "totalValidators": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of validators in the blockchain."
        },
        "totalPower": {
          "type": "string",
          "format": "int64",
          "description": "The total power of the blockchain."
        },
        "committeePower": {
          "type": "string",
          "format": "int64",
          "description": "The power of the committee."
        },
        "committeeValidators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusValidatorInfo"
          },
          "description": "List of committee validators."
        }
      },
      "description": "Message containing the response with general blockchain information."
    },
    "pactusGetConsensusInfoResponse": {
      "type": "object",
      "properties": {
        "instances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusConsensusInfo"
          },
          "description": "List of consensus instances."
        }
      },
      "description": "Message containing the response with consensus information."
    },
    "pactusGetNetworkInfoResponse": {
      "type": "object",
      "properties": {
        "networkName": {
          "type": "string",
          "description": "Name of the network."
        },
        "totalSentBytes": {
          "type": "string",
          "format": "int64",
          "description": "Total bytes sent across the network."
        },
        "totalReceivedBytes": {
          "type": "string",
          "format": "int64",
          "description": "Total bytes received across the network."
        },
        "connectedPeersCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of connected peers."
        },
        "connectedPeers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusPeerInfo"
          },
          "description": "List of connected peers."
        },
        "sentBytes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "description": "Bytes sent per peer ID."
        },
        "receivedBytes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "description": "Bytes received per peer ID."
        }
      },
      "description": "Response message containing information about the overall network."
    },
    "pactusGetNewAddressResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "The name of the wallet from which the address is generated."
        },
        "addressInfo": {
          "$ref": "#/definitions/pactusAddressInfo",
          "description": "Information about the newly generated address."
        }
      },
      "description": "Response message containing the newly generated address."
    },
    "pactusGetNodeInfoResponse": {
      "type": "object",
      "properties": {
        "moniker": {
          "type": "string",
          "description": "Moniker of the node."
        },
        "agent": {
          "type": "string",
          "description": "Agent information of the node."
        },
        "peerId": {
          "type": "string",
          "description": "Peer ID of the node."
        },
        "startedAt": {
          "type": "string",
          "format": "uint64",
          "description": "Timestamp when the node started."
        },
        "reachability": {
          "type": "string",
          "description": "Reachability status of the node."
        },
        "services": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "List of services provided by the node."
        },
        "servicesNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Names of services provided by the node."
        },
        "localAddrs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of addresses associated with the node."
        },
        "protocols": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of protocols supported by the node."
        },
        "clockOffset": {
          "type": "number",
          "format": "double",
          "description": "Clock offset of the node."
        },
        "connectionInfo": {
          "$ref": "#/definitions/pactusConnectionInfo",
          "description": "Information about the node's connections."
        }
      },
      "description": "Response message containing information about a specific node in the network."
    },
    "pactusGetPublicKeyResponse": {
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "string",
          "description": "The public key associated with the provided address."
        }
      },
      "description": "Message containing the response with the public key."
    },
    "pactusGetRawTransactionResponse": {
      "type": "object",
      "properties": {
        "rawTransaction": {
          "type": "string",
          "description": "The raw transaction data."
        }
      },
      "description": "Response message containing raw transaction data."
    },
    "pactusGetTotalBalanceResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "The name of the wallet."
        },
        "totalBalance": {
          "type": "string",
          "format": "int64",
          "description": "The total balance of the wallet in NanoPAC."
        }
      },
      "description": "Response message containing the available balance of the wallet."
    },
    "pactusGetTransactionResponse": {
      "type": "object",
      "properties": {
        "blockHeight": {
          "type": "integer",
          "format": "int64",
          "description": "The height of the block containing the transaction."
        },
        "blockTime": {
          "type": "integer",
          "format": "int64",
          "description": "The UNIX timestamp of the block containing the transaction."
        },
        "transaction": {
          "$ref": "#/definitions/pactusTransactionInfo",
          "description": "Detailed information about the transaction."
        }
      },
      "description": "Response message containing details of a transaction."
    },
    "pactusGetTxPoolContentResponse": {
      "type": "object",
      "properties": {
        "txs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusTransactionInfo"
          },
          "description": "List of transactions currently in the pool."
        }
      },
      "description": "Response message containing transactions in the transaction pool."
    },
    "pactusGetValidatorAddressResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "The validator address associated with the public key."
        }
      },
      "description": "Response message containing the validator address corresponding to a public\nkey."
    },
    "pactusGetValidatorAddressesResponse": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of validator addresses."
        }
      },
      "description": "Message containing the response with a list of validator addresses."
    },
    "pactusGetValidatorResponse": {
      "type": "object",
      "properties": {
        "validator": {
          "$ref": "#/definitions/pactusValidatorInfo",
          "description": "Detailed information about the validator."
        }
      },
      "description": "Message containing the response with validator information."
    },
    "pactusHistoryInfo": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "The transaction ID hash."
        },
        "time": {
          "type": "integer",
          "format": "int64",
          "description": "The timestamp of the transaction."
        },
        "payloadType": {
          "type": "string",
          "description": "The payload type of the transaction."
        },
        "description": {
          "type": "string",
          "description": "A description of the transaction."
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "description": "The amount involved in the transaction."
        }
      },
      "description": "Message containing transaction history information for an address."
    },
    "pactusLoadWalletResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "The name of the loaded wallet."
        }
      },
      "description": "Response message containing the name of the loaded wallet."
    },
    "pactusPayloadBond": {
      "type": "object",
      "properties": {
        "sender": {
          "type": "string",
          "description": "The sender's address."
        },
        "receiver": {
          "type": "string",
          "description": "The receiver's address."
        },
        "stake": {
          "type": "string",
          "format": "int64",
          "description": "The stake amount in NanoPAC."
        }
      },
      "description": "Payload for a bond transaction."
    },
    "pactusPayloadSortition": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "The validator address associated with the sortition proof."
        },
        "proof": {
          "type": "string",
          "description": "The proof for the sortition."
        }
      },
      "description": "Payload for a sortition transaction."
    },
    "pactusPayloadTransfer": {
      "type": "object",
      "properties": {
        "sender": {
          "type": "string",
          "description": "The sender's address."
        },
        "receiver": {
          "type": "string",
          "description": "The receiver's address."
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "description": "The amount to be transferred in NanoPAC."
        }
      },
      "description": "Payload for a transfer transaction."
    },
    "pactusPayloadType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "TRANSFER_PAYLOAD",
        "BOND_PAYLOAD",
        "SORTITION_PAYLOAD",
        "UNBOND_PAYLOAD",
        "WITHDRAW_PAYLOAD"
      ],
      "default": "UNKNOWN",
      "description": "Enumeration for different types of transaction payloads.\n\n - UNKNOWN: Unknown payload type.\n - TRANSFER_PAYLOAD: Transfer payload type.\n - BOND_PAYLOAD: Bond payload type.\n - SORTITION_PAYLOAD: Sortition payload type.\n - UNBOND_PAYLOAD: Unbond payload type.\n - WITHDRAW_PAYLOAD: Withdraw payload type."
    },
    "pactusPayloadUnbond": {
      "type": "object",
      "properties": {
        "validator": {
          "type": "string",
          "description": "The address of the validator to unbond from."
        }
      },
      "description": "Payload for an unbond transaction."
    },
    "pactusPayloadWithdraw": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "description": "The address to withdraw from."
        },
        "to": {
          "type": "string",
          "description": "The address to withdraw to."
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "description": "The withdrawal amount in NanoPAC."
        }
      },
      "description": "Payload for a withdraw transaction."
    },
    "pactusPeerInfo": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "Status of the peer."
        },
        "moniker": {
          "type": "string",
          "description": "Moniker of the peer."
        },
        "agent": {
          "type": "string",
          "description": "Agent information of the peer."
        },
        "peerId": {
          "type": "string",
          "description": "Peer ID of the peer."
        },
        "consensusKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Consensus keys used by the peer."
        },
        "consensusAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Consensus addresses of the peer."
        },
        "services": {
          "type": "integer",
          "format": "int64",
          "description": "Services provided by the peer."
        },
        "lastBlockHash": {
          "type": "string",
          "description": "Hash of the last block the peer knows."
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "description": "Blockchain height of the peer."
        },
        "receivedBundles": {
          "type": "integer",
          "format": "int32",
          "description": "Number of received bundles."
        },
        "invalidBundles": {
          "type": "integer",
          "format": "int32",
          "description": "Number of invalid bundles received."
        },
        "lastSent": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp of the last sent bundle."
        },
        "lastReceived": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp of the last received bundle."
        },
        "sentBytes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "description": "Bytes sent per message type."
        },
        "receivedBytes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "description": "Bytes received per message type."
        },
        "address": {
          "type": "string",
          "description": "Network address of the peer."
        },
        "direction": {
          "type": "string",
          "description": "Direction of connection with the peer."
        },
        "protocols": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of protocols supported by the peer."
        },
        "totalSessions": {
          "type": "integer",
          "format": "int32",
          "description": "Total download sessions with the peer."
        },
        "completedSessions": {
          "type": "integer",
          "format": "int32",
          "description": "Completed download sessions with the peer."
        }
      },
      "description": "Information about a peer in the network."
    },
    "pactusRestoreWalletResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "The name of the restored wallet."
        }
      },
      "description": "Response message containing the name of the restored wallet."
    },
    "pactusSignMessageResponse": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string",
          "description": "Signature of the message."
        }
      },
      "description": "Response message containing the available balance of the wallet."
    },
    "pactusSignMessageWithPrivateKeyResponse": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string",
          "description": "The signature of the message."
        }
      },
      "description": "Response message containing the generated signature."
    },
    "pactusSignRawTransactionResponse": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "The ID of the signed transaction."
        },
        "signedRawTransaction": {
          "type": "string",
          "description": "The signed raw transaction data."
        }
      },
      "description": "Response message containing the transaction ID and signed raw transaction."
    },
    "pactusTransactionInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the transaction."
        },
        "data": {
          "type": "string",
          "description": "The raw transaction data."
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "The version of the transaction."
        },
        "lockTime": {
          "type": "integer",
          "format": "int64",
          "description": "The lock time for the transaction."
        },
        "value": {
          "type": "string",
          "format": "int64",
          "description": "The value of the transaction in NanoPAC."
        },
        "fee": {
          "type": "string",
          "format": "int64",
          "description": "The fee for the transaction in NanoPAC."
        },
        "payloadType": {
          "$ref": "#/definitions/pactusPayloadType",
          "description": "The type of transaction payload."
        },
        "transfer": {
          "$ref": "#/definitions/pactusPayloadTransfer",
          "description": "Transfer transaction payload."
        },
        "bond": {
          "$ref": "#/definitions/pactusPayloadBond",
          "description": "Bond transaction payload."
        },
        "sortition": {
          "$ref": "#/definitions/pactusPayloadSortition",
          "description": "Sortition transaction payload."
        },
        "unbond": {
          "$ref": "#/definitions/pactusPayloadUnbond",
          "description": "Unbond transaction payload."
        },
        "withdraw": {
          "$ref": "#/definitions/pactusPayloadWithdraw",
          "description": "Withdraw transaction payload."
        },
        "memo": {
          "type": "string",
          "description": "A memo string for the transaction."
        },
        "publicKey": {
          "type": "string",
          "description": "The public key associated with the transaction."
        },
        "signature": {
          "type": "string",
          "description": "The signature for the transaction."
        }
      },
      "description": "Information about a transaction."
    },
    "pactusTransactionVerbosity": {
      "type": "string",
      "enum": [
        "TRANSACTION_DATA",
        "TRANSACTION_INFO"
      ],
      "default": "TRANSACTION_DATA",
      "description": "Enumeration for verbosity levels when requesting transaction details.\n\n - TRANSACTION_DATA: Request transaction data only.\n - TRANSACTION_INFO: Request detailed transaction information."
    },
    "pactusUnloadWalletResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "The name of the unloaded wallet."
        }
      },
      "description": "Response message containing the name of the unloaded wallet."
    },
    "pactusValidatorInfo": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "The hash of the validator."
        },
        "data": {
          "type": "string",
          "description": "The serialized data of the validator."
        },
        "publicKey": {
          "type": "string",
          "description": "The public key of the validator."
        },
        "number": {
          "type": "integer",
          "format": "int32",
          "description": "The unique number assigned to the validator."
        },
        "stake": {
          "type": "string",
          "format": "int64",
          "description": "The stake of the validator in NanoPAC."
        },
        "lastBondingHeight": {
          "type": "integer",
          "format": "int64",
          "description": "The height at which the validator last bonded."
        },
        "lastSortitionHeight": {
          "type": "integer",
          "format": "int64",
          "description": "The height at which the validator last participated in sortition."
        },
        "unbondingHeight": {
          "type": "integer",
          "format": "int64",
          "description": "The height at which the validator will unbond."
        },
        "address": {
          "type": "string",
          "description": "The address of the validator."
        },
        "availabilityScore": {
          "type": "number",
          "format": "double",
          "description": "The availability score of the validator."
        }
      },
      "description": "Message containing information about a validator."
    },
    "pactusVerifyMessageResponse": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean",
          "description": "Indicates if the signature is valid (true) or not (false)."
        }
      },
      "description": "Response message containing the resualt of validation of signature and message."
    },
    "pactusVoteInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/pactusVoteType",
          "description": "The type of the vote."
        },
        "voter": {
          "type": "string",
          "description": "The address of the voter."
        },
        "blockHash": {
          "type": "string",
          "description": "The hash of the block being voted on."
        },
        "round": {
          "type": "integer",
          "format": "int32",
          "description": "The consensus round of the vote."
        },
        "cpRound": {
          "type": "integer",
          "format": "int32",
          "description": "The change-proposer round of the vote."
        },
        "cpValue": {
          "type": "integer",
          "format": "int32",
          "description": "The change-proposer value of the vote."
        }
      },
      "description": "Message containing information about a vote."
    },
    "pactusVoteType": {
      "type": "string",
      "enum": [
        "VOTE_UNKNOWN",
        "VOTE_PREPARE",
        "VOTE_PRECOMMIT",
        "VOTE_CHANGE_PROPOSER"
      ],
      "default": "VOTE_UNKNOWN",
      "description": "Enumeration for types of votes.\n\n - VOTE_UNKNOWN: Unknown vote type.\n - VOTE_PREPARE: Prepare vote type.\n - VOTE_PRECOMMIT: Precommit vote type.\n - VOTE_CHANGE_PROPOSER: Change proposer vote type."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "BasicAuth": []
    }
  ]
}
