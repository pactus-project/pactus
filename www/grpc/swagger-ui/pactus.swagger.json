{
  "swagger": "2.0",
  "info": {
    "title": "Pactus APIs",
    "description": "Each node in the Pactus network can be configured to use the [gRPC](https://grpc.io/) protocol for communication.\nHere you can find the list of all gRPC methods and messages.\n\nAll the amounts and values in gRPC endpoints are in NanoPAC units, which are atomic and the smallest unit in the Pactus blockchain.\nEach PAC is equivalent to 1,000,000,000 or 10\u003csup\u003e9\u003c/sup\u003e NanoPACs.\n",
    "version": "1.1"
  },
  "tags": [
    {
      "name": "Transaction"
    },
    {
      "name": "Blockchain"
    },
    {
      "name": "Network"
    },
    {
      "name": "Wallet"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/pactus/blockchain/get_account": {
      "get": {
        "summary": "GetAccount retrieves information about an account based on the provided\naddress.",
        "operationId": "Blockchain_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "Address of the account.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_block": {
      "get": {
        "summary": "GetBlock retrieves information about a block based on the provided request\nparameters.",
        "operationId": "Blockchain_GetBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetBlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "description": "Height of the block.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "verbosity",
            "description": "Verbosity level for block information.\n\n - BLOCK_DATA: Request block data only.\n - BLOCK_INFO: Request block information and transaction IDs.\n - BLOCK_TRANSACTIONS: Request block information and transaction details.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BLOCK_DATA",
              "BLOCK_INFO",
              "BLOCK_TRANSACTIONS"
            ],
            "default": "BLOCK_DATA"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_block_hash": {
      "get": {
        "summary": "GetBlockHash retrieves the hash of a block at the specified height.",
        "operationId": "Blockchain_GetBlockHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetBlockHashResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "description": "Height of the block.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_block_height": {
      "get": {
        "summary": "GetBlockHeight retrieves the height of a block with the specified hash.",
        "operationId": "Blockchain_GetBlockHeight",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetBlockHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "Hash of the block.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_blockchain_info": {
      "get": {
        "summary": "GetBlockchainInfo retrieves general information about the blockchain.",
        "operationId": "Blockchain_GetBlockchainInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetBlockchainInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_consensus_info": {
      "get": {
        "summary": "GetConsensusInfo retrieves information about the consensus instances.",
        "operationId": "Blockchain_GetConsensusInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetConsensusInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_public_key": {
      "get": {
        "summary": "GetPublicKey retrieves the public key of an account based on the provided\naddress.",
        "operationId": "Blockchain_GetPublicKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetPublicKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "Address for which public key is requested.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_validator": {
      "get": {
        "summary": "GetValidator retrieves information about a validator based on the provided\naddress.",
        "operationId": "Blockchain_GetValidator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "Address of the validator.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/blockchain/get_validator_by_number": {
      "get": {
        "summary": "GetValidatorByNumber retrieves information about a validator based on the\nprovided number.",
        "operationId": "Blockchain_GetValidatorByNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "number",
            "description": "Validator number.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Blockchain"
        ]
      }
    },
    "/pactus/network/get_network_info": {
      "get": {
        "summary": "GetNetworkInfo retrieves information about the overall network.",
        "operationId": "Network_GetNetworkInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetNetworkInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Network"
        ]
      }
    },
    "/pactus/network/get_node_info": {
      "get": {
        "summary": "GetNodeInfo retrieves information about a specific node in the network.",
        "operationId": "Network_GetNodeInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetNodeInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Network"
        ]
      }
    },
    "/pactus/transaction/broadcast_transaction": {
      "put": {
        "summary": "BroadcastTransaction broadcasts a signed transaction to the network.",
        "operationId": "Transaction_BroadcastTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusBroadcastTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "signedRawTransaction",
            "description": "Signed raw transaction data.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/calculate_fee": {
      "get": {
        "summary": "CalculateFee calculates the transaction fee based on the specified amount\nand payload type.",
        "operationId": "Transaction_CalculateFee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusCalculateFeeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "amount",
            "description": "Transaction amount in NanoPAC.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "payloadType",
            "description": "Type of transaction payload.\n\n - UNKNOWN: Unknown payload type.\n - TRANSFER_PAYLOAD: Transfer payload type.\n - BOND_PAYLOAD: Bond payload type.\n - SORTITION_PAYLOAD: Sortition payload type.\n - UNBOND_PAYLOAD: Unbond payload type.\n - WITHDRAW_PAYLOAD: Withdraw payload type.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "TRANSFER_PAYLOAD",
              "BOND_PAYLOAD",
              "SORTITION_PAYLOAD",
              "UNBOND_PAYLOAD",
              "WITHDRAW_PAYLOAD"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "fixedAmount",
            "description": "Indicates that amount should be fixed and includes the fee.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/get_raw_bond_transaction": {
      "get": {
        "summary": "GetRawBondTransaction retrieves raw details of a bond transaction.",
        "operationId": "Transaction_GetRawBondTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetRawTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lockTime",
            "description": "Lock time for the transaction.\nIf not explicitly set, it sets to the last block height.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sender",
            "description": "Sender's account address.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "receiver",
            "description": "Receiver's validator address.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stake",
            "description": "Stake amount in NanoPAC.\nIt should be greater than 0.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "publicKey",
            "description": "Public key of the validator.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fee",
            "description": "Transaction fee in NanoPAC.\nIf not explicitly set, it is calculated based on the stake.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "memo",
            "description": "Transaction memo.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/get_raw_transfer_transaction": {
      "get": {
        "summary": "GetRawTransferTransaction retrieves raw details of a transfer transaction.",
        "operationId": "Transaction_GetRawTransferTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetRawTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lockTime",
            "description": "Lock time for the transaction.\nIf not explicitly set, it sets to the last block height.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sender",
            "description": "Sender's account address.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "receiver",
            "description": "Receiver's account address.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "amount",
            "description": "Transfer amount in NanoPAC.\nIt should be greater than 0.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fee",
            "description": "Transaction fee in NanoPAC.\nIf not explicitly set, it is calculated based on the amount.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "memo",
            "description": "Transaction memo.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/get_raw_unbond_transaction": {
      "get": {
        "summary": "GetRawUnbondTransaction retrieves raw details of an unbond transaction.",
        "operationId": "Transaction_GetRawUnbondTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetRawTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lockTime",
            "description": "Lock time for the transaction.\nIf not explicitly set, it sets to the last block height.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "validatorAddress",
            "description": "Address of the validator to unbond from.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memo",
            "description": "Transaction memo.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/get_raw_withdraw_transaction": {
      "get": {
        "summary": "GetRawWithdrawTransaction retrieves raw details of a withdraw transaction.",
        "operationId": "Transaction_GetRawWithdrawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetRawTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lockTime",
            "description": "Lock time for the transaction.\nIf not explicitly set, it sets to the last block height.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "validatorAddress",
            "description": "Address of the validator to withdraw from.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountAddress",
            "description": "Address of the account to withdraw to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "amount",
            "description": "Withdrawal amount in NanoPAC.\nIt should be greater than 0.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fee",
            "description": "Transaction fee in NanoPAC.\nIf not explicitly set, it is calculated based on the amount.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "memo",
            "description": "Transaction memo.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/transaction/get_transaction": {
      "get": {
        "summary": "GetTransaction retrieves transaction details based on the provided request\nparameters.",
        "operationId": "Transaction_GetTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Transaction ID.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "verbosity",
            "description": "Verbosity level for transaction details.\n\n - TRANSACTION_DATA: Request transaction data only.\n - TRANSACTION_INFO: Request transaction details.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TRANSACTION_DATA",
              "TRANSACTION_INFO"
            ],
            "default": "TRANSACTION_DATA"
          }
        ],
        "tags": [
          "Transaction"
        ]
      }
    },
    "/pactus/wallet/create_wallet": {
      "get": {
        "summary": "CreateWallet creates a new wallet with the specified parameters.",
        "operationId": "Wallet_CreateWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusCreateWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "Name of the new wallet.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mnemonic",
            "description": "Mnemonic for wallet recovery.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "description": "Language for the mnemonic.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "Password for securing the wallet.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/get_new_address": {
      "get": {
        "summary": "GetNewAddress generates a new address for the specified wallet.",
        "operationId": "Wallet_GetNewAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetNewAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "Name of the wallet for which the new address is requested.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "addressType",
            "description": "Address type for the new address.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ADDRESS_TYPE_TREASURY",
              "ADDRESS_TYPE_VALIDATOR",
              "ADDRESS_TYPE_BLS_ACCOUNT"
            ],
            "default": "ADDRESS_TYPE_TREASURY"
          },
          {
            "name": "label",
            "description": "Label for the new address.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/get_total_balance": {
      "get": {
        "summary": "GetTotalBalance returns the total available balance of the wallet.",
        "operationId": "Wallet_GetTotalBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetTotalBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "Name of the wallet.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/get_validator_address": {
      "get": {
        "summary": "GetValidatorAddress retrieves the validator address associated with a\npublic key.",
        "operationId": "Wallet_GetValidatorAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusGetValidatorAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "publicKey",
            "description": "Public key for which the validator address is requested.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/load_wallet": {
      "get": {
        "summary": "LoadWallet loads an existing wallet with the given name.",
        "operationId": "Wallet_LoadWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusLoadWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "Name of the wallet to load.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/lock_wallet": {
      "get": {
        "summary": "LockWallet locks a currently loaded wallet with the provided password and\ntimeout.",
        "operationId": "Wallet_LockWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusLockWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "Name of the wallet to lock.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/sign_raw_transaction": {
      "get": {
        "summary": "SignRawTransaction signs a raw transaction for a specified wallet.",
        "operationId": "Wallet_SignRawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusSignRawTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "Name of the wallet used for signing.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rawTransaction",
            "description": "Raw transaction data to be signed.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "password",
            "description": "Password for unlocking the wallet for signing.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/unload_wallet": {
      "get": {
        "summary": "UnloadWallet unloads a currently loaded wallet with the specified name.",
        "operationId": "Wallet_UnloadWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusUnloadWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "Name of the wallet to unload.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/pactus/wallet/unlock_wallet": {
      "get": {
        "summary": "UnlockWallet unlocks a locked wallet with the provided password and\ntimeout.",
        "operationId": "Wallet_UnlockWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pactusUnlockWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "walletName",
            "description": "Name of the wallet to unlock.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "Password for unlocking the wallet.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeout",
            "description": "Timeout duration for the unlocked state.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    }
  },
  "definitions": {
    "pactusAccountInfo": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "format": "byte",
          "description": "Hash of the account."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Account data."
        },
        "number": {
          "type": "integer",
          "format": "int32",
          "description": "Account number."
        },
        "balance": {
          "type": "string",
          "format": "int64",
          "description": "Account balance in NanoPAC."
        },
        "address": {
          "type": "string",
          "description": "Address of the account."
        }
      },
      "description": "Message containing information about an account."
    },
    "pactusAddressInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "description": "Message of address information."
    },
    "pactusAddressType": {
      "type": "string",
      "enum": [
        "ADDRESS_TYPE_TREASURY",
        "ADDRESS_TYPE_VALIDATOR",
        "ADDRESS_TYPE_BLS_ACCOUNT"
      ],
      "default": "ADDRESS_TYPE_TREASURY",
      "description": "Enum for the address type."
    },
    "pactusBlockHeaderInfo": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Block version."
        },
        "prevBlockHash": {
          "type": "string",
          "format": "byte",
          "description": "Hash of the previous block."
        },
        "stateRoot": {
          "type": "string",
          "format": "byte",
          "description": "State root of the block."
        },
        "sortitionSeed": {
          "type": "string",
          "format": "byte",
          "description": "Sortition seed of the block."
        },
        "proposerAddress": {
          "type": "string",
          "description": "Address of the proposer of the block."
        }
      },
      "description": "Message containing information about the header of a block."
    },
    "pactusBlockVerbosity": {
      "type": "string",
      "enum": [
        "BLOCK_DATA",
        "BLOCK_INFO",
        "BLOCK_TRANSACTIONS"
      ],
      "default": "BLOCK_DATA",
      "description": "Enumeration for verbosity level when requesting block information.\n\n - BLOCK_DATA: Request block data only.\n - BLOCK_INFO: Request block information and transaction IDs.\n - BLOCK_TRANSACTIONS: Request block information and transaction details."
    },
    "pactusBroadcastTransactionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "byte",
          "description": "Transaction ID."
        }
      },
      "description": "Response message containing the ID of the broadcasted transaction."
    },
    "pactusCalculateFeeResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "int64",
          "description": "Calculated amount in NanoPAC."
        },
        "fee": {
          "type": "string",
          "format": "int64",
          "description": "Calculated transaction fee in NanoPAC."
        }
      },
      "description": "Response message containing the calculated transaction fee."
    },
    "pactusCertificateInfo": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "format": "byte",
          "description": "Hash of the certificate."
        },
        "round": {
          "type": "integer",
          "format": "int32",
          "description": "Round of the certificate."
        },
        "committers": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "List of committers in the certificate."
        },
        "absentees": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "List of absentees in the certificate."
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "description": "Certificate signature."
        }
      },
      "description": "Message containing information about a certificate."
    },
    "pactusConsensusInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Address of the consensus instance."
        },
        "Active": {
          "type": "boolean",
          "description": "Whether the consensus instance is active."
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "description": "Height of the consensus instance."
        },
        "round": {
          "type": "integer",
          "format": "int32",
          "description": "Round of the consensus instance."
        },
        "votes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusVoteInfo"
          },
          "description": "List of votes in the consensus instance."
        }
      },
      "description": "Message containing information about consensus."
    },
    "pactusCreateWalletResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "Name of the created wallet."
        }
      },
      "description": "Response message containing the name of the created wallet."
    },
    "pactusGetAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/pactusAccountInfo",
          "description": "Account information."
        }
      },
      "description": "Message containing the response with account information."
    },
    "pactusGetAddressHistoryResponse": {
      "type": "object",
      "properties": {
        "historyInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusHistoryInfo"
          },
          "description": "Array of address history and activities."
        }
      },
      "description": "Response message to get an address transaction history."
    },
    "pactusGetBlockHashResponse": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "format": "byte",
          "description": "Hash of the block."
        }
      },
      "description": "Message containing the response with the block hash."
    },
    "pactusGetBlockHeightResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "format": "int64",
          "description": "Height of the block."
        }
      },
      "description": "Message containing the response with the block height."
    },
    "pactusGetBlockResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "format": "int64",
          "description": "Height of the block."
        },
        "hash": {
          "type": "string",
          "format": "byte",
          "description": "Hash of the block."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Block data, only available if the verbosity level is set to BLOCK_DATA."
        },
        "blockTime": {
          "type": "integer",
          "format": "int64",
          "description": "Block timestamp."
        },
        "header": {
          "$ref": "#/definitions/pactusBlockHeaderInfo",
          "description": "Block header information."
        },
        "prevCert": {
          "$ref": "#/definitions/pactusCertificateInfo",
          "description": "Certificate information of the previous block."
        },
        "txs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusTransactionInfo"
          },
          "description": "List of transactions in the block.\nTransaction information is available when the verbosity level is set to BLOCK_TRANSACTIONS."
        }
      },
      "description": "Message containing the response with block information."
    },
    "pactusGetBlockchainInfoResponse": {
      "type": "object",
      "properties": {
        "lastBlockHeight": {
          "type": "integer",
          "format": "int64",
          "description": "Height of the last block."
        },
        "lastBlockHash": {
          "type": "string",
          "format": "byte",
          "description": "Hash of the last block."
        },
        "totalAccounts": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of accounts."
        },
        "totalValidators": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of validators."
        },
        "totalPower": {
          "type": "string",
          "format": "int64",
          "description": "Total power in the blockchain."
        },
        "committeePower": {
          "type": "string",
          "format": "int64",
          "description": "Power of the committee."
        },
        "committeeValidators": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusValidatorInfo"
          },
          "description": "List of committee validators."
        }
      },
      "description": "Message containing the response with general blockchain information."
    },
    "pactusGetConsensusInfoResponse": {
      "type": "object",
      "properties": {
        "instances": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusConsensusInfo"
          },
          "description": "List of consensus instances."
        }
      },
      "description": "Message containing the response with consensus information."
    },
    "pactusGetNetworkInfoResponse": {
      "type": "object",
      "properties": {
        "networkName": {
          "type": "string",
          "description": "Name of the network."
        },
        "totalSentBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Total bytes sent across the network."
        },
        "totalReceivedBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Total bytes received across the network."
        },
        "connectedPeersCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of connected peers."
        },
        "connectedPeers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pactusPeerInfo"
          },
          "description": "List of connected peers."
        },
        "sentBytes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "uint64"
          },
          "description": "Bytes sent per peer ID."
        },
        "receivedBytes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "uint64"
          },
          "description": "Bytes received per peer ID."
        }
      },
      "description": "Response message containing information about the overall network."
    },
    "pactusGetNewAddressResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "Name of the wallet."
        },
        "addressInfo": {
          "$ref": "#/definitions/pactusAddressInfo",
          "description": "Address information."
        }
      },
      "description": "Response message containing the new address."
    },
    "pactusGetNodeInfoResponse": {
      "type": "object",
      "properties": {
        "moniker": {
          "type": "string",
          "description": "Moniker of the node."
        },
        "agent": {
          "type": "string",
          "description": "Agent information of the node."
        },
        "peerId": {
          "type": "string",
          "format": "byte",
          "description": "Peer ID of the node."
        },
        "startedAt": {
          "type": "string",
          "format": "uint64",
          "description": "Timestamp when the node started."
        },
        "reachability": {
          "type": "string",
          "description": "Reachability status of the node."
        },
        "services": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "List of services provided by the node."
        },
        "servicesNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Names of services provided by the node."
        },
        "addrs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of addresses associated with the node."
        },
        "protocols": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of protocols supported by the node."
        }
      },
      "description": "Response message containing information about a specific node in the network."
    },
    "pactusGetPublicKeyResponse": {
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "string",
          "description": "Public key of the account."
        }
      },
      "description": "Message containing the response with the public key."
    },
    "pactusGetRawTransactionResponse": {
      "type": "object",
      "properties": {
        "rawTransaction": {
          "type": "string",
          "format": "byte",
          "description": "Raw transaction data."
        }
      },
      "description": "Response message containing raw transaction data."
    },
    "pactusGetTotalBalanceResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "Name of the wallet."
        },
        "totalBalance": {
          "type": "string",
          "format": "int64",
          "description": "The total balance of the wallet in NanoPAC."
        }
      },
      "description": "Response message containing the available balance of the wallet."
    },
    "pactusGetTransactionResponse": {
      "type": "object",
      "properties": {
        "blockHeight": {
          "type": "integer",
          "format": "int64",
          "description": "Height of the block containing the transaction."
        },
        "blockTime": {
          "type": "integer",
          "format": "int64",
          "description": "Time of the block containing the transaction."
        },
        "transaction": {
          "$ref": "#/definitions/pactusTransactionInfo",
          "description": "Information about the transaction."
        }
      },
      "description": "Response message containing details of a transaction."
    },
    "pactusGetValidatorAddressResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Validator address associated with the public key."
        }
      },
      "description": "Response message containing the validator address corresponding to a public\nkey."
    },
    "pactusGetValidatorAddressesResponse": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of validator addresses."
        }
      },
      "description": "Message containing the response with a list of validator addresses."
    },
    "pactusGetValidatorResponse": {
      "type": "object",
      "properties": {
        "validator": {
          "$ref": "#/definitions/pactusValidatorInfo",
          "description": "Validator information."
        }
      },
      "description": "Message containing the response with validator information."
    },
    "pactusHistoryInfo": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "Hash of transaction."
        },
        "time": {
          "type": "integer",
          "format": "int64",
          "description": "transaction timestamp."
        },
        "payloadType": {
          "type": "string",
          "description": "payload type of transaction."
        },
        "description": {
          "type": "string",
          "description": "description of transaction."
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "description": "amount of transaction."
        }
      },
      "description": "Message of address history information."
    },
    "pactusLoadWalletResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "Name of the loaded wallet."
        }
      },
      "description": "Response message containing the name of the loaded wallet."
    },
    "pactusLockWalletResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "Name of the locked wallet."
        }
      },
      "description": "Response message containing the name of the locked wallet."
    },
    "pactusPayloadBond": {
      "type": "object",
      "properties": {
        "sender": {
          "type": "string",
          "description": "Sender's address."
        },
        "receiver": {
          "type": "string",
          "description": "Receiver's address."
        },
        "stake": {
          "type": "string",
          "format": "int64",
          "description": "Stake amount in NanoPAC."
        }
      },
      "description": "Payload for a bond transaction."
    },
    "pactusPayloadSortition": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Address associated with the sortition."
        },
        "proof": {
          "type": "string",
          "format": "byte",
          "description": "Proof for the sortition."
        }
      },
      "description": "Payload for a sortition transaction."
    },
    "pactusPayloadTransfer": {
      "type": "object",
      "properties": {
        "sender": {
          "type": "string",
          "description": "Sender's address."
        },
        "receiver": {
          "type": "string",
          "description": "Receiver's address."
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "description": "Transaction amount in NanoPAC."
        }
      },
      "description": "Payload for a transfer transaction."
    },
    "pactusPayloadType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "TRANSFER_PAYLOAD",
        "BOND_PAYLOAD",
        "SORTITION_PAYLOAD",
        "UNBOND_PAYLOAD",
        "WITHDRAW_PAYLOAD"
      ],
      "default": "UNKNOWN",
      "description": "Enumeration for different types of transaction payloads.\n\n - UNKNOWN: Unknown payload type.\n - TRANSFER_PAYLOAD: Transfer payload type.\n - BOND_PAYLOAD: Bond payload type.\n - SORTITION_PAYLOAD: Sortition payload type.\n - UNBOND_PAYLOAD: Unbond payload type.\n - WITHDRAW_PAYLOAD: Withdraw payload type."
    },
    "pactusPayloadUnbond": {
      "type": "object",
      "properties": {
        "validator": {
          "type": "string",
          "description": "Address of the validator to unbond from."
        }
      },
      "description": "Payload for an unbond transaction."
    },
    "pactusPayloadWithdraw": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "description": "Address to withdraw from."
        },
        "to": {
          "type": "string",
          "description": "Address to withdraw to."
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "description": "Withdrawal amount in NanoPAC."
        }
      },
      "description": "Payload for a withdraw transaction."
    },
    "pactusPeerInfo": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "Status of the peer."
        },
        "moniker": {
          "type": "string",
          "description": "Moniker of the peer."
        },
        "agent": {
          "type": "string",
          "description": "Agent information of the peer."
        },
        "peerId": {
          "type": "string",
          "format": "byte",
          "description": "Peer ID of the peer."
        },
        "consensusKeys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Consensus keys used by the peer."
        },
        "consensusAddress": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Consensus address of the peer."
        },
        "services": {
          "type": "integer",
          "format": "int64",
          "description": "Services provided by the peer."
        },
        "lastBlockHash": {
          "type": "string",
          "format": "byte",
          "description": "Hash of the last block the peer knows."
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "description": "Height of the peer in the blockchain."
        },
        "receivedMessages": {
          "type": "integer",
          "format": "int32",
          "description": "Count of received messages."
        },
        "invalidMessages": {
          "type": "integer",
          "format": "int32",
          "description": "Count of invalid messages received."
        },
        "lastSent": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp of the last sent message."
        },
        "lastReceived": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp of the last received message."
        },
        "sentBytes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "description": "Bytes sent per message type."
        },
        "receivedBytes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "description": "Bytes received per message type."
        },
        "address": {
          "type": "string",
          "description": "Network address of the peer."
        },
        "direction": {
          "type": "string",
          "description": "Direction of connection with the peer."
        },
        "protocols": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of protocols supported by the peer."
        },
        "totalSessions": {
          "type": "integer",
          "format": "int32",
          "description": "Total sessions with the peer."
        },
        "completedSessions": {
          "type": "integer",
          "format": "int32",
          "description": "Completed sessions with the peer."
        }
      },
      "description": "Information about a peer in the network."
    },
    "pactusSignRawTransactionResponse": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "format": "byte",
          "description": "ID of the signed transaction."
        },
        "signedRawTransaction": {
          "type": "string",
          "format": "byte",
          "description": "Signed raw transaction data."
        }
      },
      "description": "Response message containing the transaction ID and signed raw transaction."
    },
    "pactusTransactionInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "byte",
          "description": "Transaction ID."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Transaction data."
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Transaction version."
        },
        "lockTime": {
          "type": "integer",
          "format": "int64",
          "description": "Lock time for the transaction."
        },
        "value": {
          "type": "string",
          "format": "int64",
          "description": "Transaction value in NanoPAC."
        },
        "fee": {
          "type": "string",
          "format": "int64",
          "description": "Transaction fee in NanoPAC."
        },
        "payloadType": {
          "$ref": "#/definitions/pactusPayloadType",
          "description": "Type of transaction payload."
        },
        "transfer": {
          "$ref": "#/definitions/pactusPayloadTransfer",
          "description": "Transfer payload."
        },
        "bond": {
          "$ref": "#/definitions/pactusPayloadBond",
          "description": "Bond payload."
        },
        "sortition": {
          "$ref": "#/definitions/pactusPayloadSortition",
          "description": "Sortition payload."
        },
        "unbond": {
          "$ref": "#/definitions/pactusPayloadUnbond",
          "description": "Unbond payload."
        },
        "withdraw": {
          "$ref": "#/definitions/pactusPayloadWithdraw",
          "description": "Withdraw payload."
        },
        "memo": {
          "type": "string",
          "description": "Transaction memo."
        },
        "publicKey": {
          "type": "string",
          "description": "Public key associated with the transaction."
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "description": "Transaction signature."
        }
      },
      "description": "Information about a transaction."
    },
    "pactusTransactionVerbosity": {
      "type": "string",
      "enum": [
        "TRANSACTION_DATA",
        "TRANSACTION_INFO"
      ],
      "default": "TRANSACTION_DATA",
      "description": "Enumeration for verbosity level when requesting transaction details.\n\n - TRANSACTION_DATA: Request transaction data only.\n - TRANSACTION_INFO: Request transaction details."
    },
    "pactusUnloadWalletResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "Name of the unloaded wallet."
        }
      },
      "description": "Response message containing the name of the unloaded wallet."
    },
    "pactusUnlockWalletResponse": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "Name of the unlocked wallet."
        }
      },
      "description": "Response message containing the name of the unlocked wallet."
    },
    "pactusValidatorInfo": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "format": "byte",
          "description": "Hash of the validator."
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Validator data."
        },
        "publicKey": {
          "type": "string",
          "description": "Public key of the validator."
        },
        "number": {
          "type": "integer",
          "format": "int32",
          "description": "Validator number."
        },
        "stake": {
          "type": "string",
          "format": "int64",
          "description": "Validator stake in NanoPAC."
        },
        "lastBondingHeight": {
          "type": "integer",
          "format": "int64",
          "description": "Last bonding height."
        },
        "lastSortitionHeight": {
          "type": "integer",
          "format": "int64",
          "description": "Last sortition height."
        },
        "unbondingHeight": {
          "type": "integer",
          "format": "int64",
          "description": "Unbonding height."
        },
        "address": {
          "type": "string",
          "description": "Address of the validator."
        },
        "availabilityScore": {
          "type": "number",
          "format": "double",
          "description": "Availability score of the validator."
        }
      },
      "description": "Message containing information about a validator."
    },
    "pactusVoteInfo": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/pactusVoteType",
          "description": "Type of the vote."
        },
        "voter": {
          "type": "string",
          "description": "Voter's address."
        },
        "blockHash": {
          "type": "string",
          "format": "byte",
          "description": "Hash of the block being voted on."
        },
        "round": {
          "type": "integer",
          "format": "int32",
          "description": "Round of the vote."
        },
        "cpRound": {
          "type": "integer",
          "format": "int32",
          "description": "Consensus round of the vote."
        },
        "cpValue": {
          "type": "integer",
          "format": "int32",
          "description": "Consensus value of the vote."
        }
      },
      "description": "Message containing information about a vote."
    },
    "pactusVoteType": {
      "type": "string",
      "enum": [
        "VOTE_UNKNOWN",
        "VOTE_PREPARE",
        "VOTE_PRECOMMIT",
        "VOTE_CHANGE_PROPOSER"
      ],
      "default": "VOTE_UNKNOWN",
      "description": "Enumeration for types of votes.\n\n - VOTE_UNKNOWN: Unknown vote type.\n - VOTE_PREPARE: Prepare vote type.\n - VOTE_PRECOMMIT: Precommit vote type.\n - VOTE_CHANGE_PROPOSER: Change proposer vote type."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic",
      "in": "header"
    }
  }
}
