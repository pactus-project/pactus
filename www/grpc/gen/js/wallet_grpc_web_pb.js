/**
 * @fileoverview gRPC-Web generated client stub for pactus
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: wallet.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.pactus = require('./wallet_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pactus.WalletClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pactus.WalletPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.CreateWalletRequest,
 *   !proto.pactus.CreateWalletResponse>}
 */
const methodDescriptor_Wallet_CreateWallet = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/CreateWallet',
  grpc.web.MethodType.UNARY,
  proto.pactus.CreateWalletRequest,
  proto.pactus.CreateWalletResponse,
  /**
   * @param {!proto.pactus.CreateWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.CreateWalletResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.CreateWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.CreateWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.CreateWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.createWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/CreateWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_CreateWallet,
      callback);
};


/**
 * @param {!proto.pactus.CreateWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.CreateWalletResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.createWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/CreateWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_CreateWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.RestoreWalletRequest,
 *   !proto.pactus.RestoreWalletResponse>}
 */
const methodDescriptor_Wallet_RestoreWallet = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/RestoreWallet',
  grpc.web.MethodType.UNARY,
  proto.pactus.RestoreWalletRequest,
  proto.pactus.RestoreWalletResponse,
  /**
   * @param {!proto.pactus.RestoreWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.RestoreWalletResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.RestoreWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.RestoreWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.RestoreWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.restoreWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/RestoreWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_RestoreWallet,
      callback);
};


/**
 * @param {!proto.pactus.RestoreWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.RestoreWalletResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.restoreWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/RestoreWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_RestoreWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.LoadWalletRequest,
 *   !proto.pactus.LoadWalletResponse>}
 */
const methodDescriptor_Wallet_LoadWallet = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/LoadWallet',
  grpc.web.MethodType.UNARY,
  proto.pactus.LoadWalletRequest,
  proto.pactus.LoadWalletResponse,
  /**
   * @param {!proto.pactus.LoadWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.LoadWalletResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.LoadWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.LoadWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.LoadWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.loadWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/LoadWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_LoadWallet,
      callback);
};


/**
 * @param {!proto.pactus.LoadWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.LoadWalletResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.loadWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/LoadWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_LoadWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.UnloadWalletRequest,
 *   !proto.pactus.UnloadWalletResponse>}
 */
const methodDescriptor_Wallet_UnloadWallet = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/UnloadWallet',
  grpc.web.MethodType.UNARY,
  proto.pactus.UnloadWalletRequest,
  proto.pactus.UnloadWalletResponse,
  /**
   * @param {!proto.pactus.UnloadWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.UnloadWalletResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.UnloadWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.UnloadWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.UnloadWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.unloadWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/UnloadWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_UnloadWallet,
      callback);
};


/**
 * @param {!proto.pactus.UnloadWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.UnloadWalletResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.unloadWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/UnloadWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_UnloadWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.GetTotalBalanceRequest,
 *   !proto.pactus.GetTotalBalanceResponse>}
 */
const methodDescriptor_Wallet_GetTotalBalance = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/GetTotalBalance',
  grpc.web.MethodType.UNARY,
  proto.pactus.GetTotalBalanceRequest,
  proto.pactus.GetTotalBalanceResponse,
  /**
   * @param {!proto.pactus.GetTotalBalanceRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.GetTotalBalanceResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.GetTotalBalanceRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.GetTotalBalanceResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.GetTotalBalanceResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.getTotalBalance =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/GetTotalBalance',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetTotalBalance,
      callback);
};


/**
 * @param {!proto.pactus.GetTotalBalanceRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.GetTotalBalanceResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.getTotalBalance =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/GetTotalBalance',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetTotalBalance);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.SignRawTransactionRequest,
 *   !proto.pactus.SignRawTransactionResponse>}
 */
const methodDescriptor_Wallet_SignRawTransaction = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/SignRawTransaction',
  grpc.web.MethodType.UNARY,
  proto.pactus.SignRawTransactionRequest,
  proto.pactus.SignRawTransactionResponse,
  /**
   * @param {!proto.pactus.SignRawTransactionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.SignRawTransactionResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.SignRawTransactionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.SignRawTransactionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.SignRawTransactionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.signRawTransaction =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/SignRawTransaction',
      request,
      metadata || {},
      methodDescriptor_Wallet_SignRawTransaction,
      callback);
};


/**
 * @param {!proto.pactus.SignRawTransactionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.SignRawTransactionResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.signRawTransaction =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/SignRawTransaction',
      request,
      metadata || {},
      methodDescriptor_Wallet_SignRawTransaction);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.GetValidatorAddressRequest,
 *   !proto.pactus.GetValidatorAddressResponse>}
 */
const methodDescriptor_Wallet_GetValidatorAddress = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/GetValidatorAddress',
  grpc.web.MethodType.UNARY,
  proto.pactus.GetValidatorAddressRequest,
  proto.pactus.GetValidatorAddressResponse,
  /**
   * @param {!proto.pactus.GetValidatorAddressRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.GetValidatorAddressResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.GetValidatorAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.GetValidatorAddressResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.GetValidatorAddressResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.getValidatorAddress =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/GetValidatorAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetValidatorAddress,
      callback);
};


/**
 * @param {!proto.pactus.GetValidatorAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.GetValidatorAddressResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.getValidatorAddress =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/GetValidatorAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetValidatorAddress);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.GetNewAddressRequest,
 *   !proto.pactus.GetNewAddressResponse>}
 */
const methodDescriptor_Wallet_GetNewAddress = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/GetNewAddress',
  grpc.web.MethodType.UNARY,
  proto.pactus.GetNewAddressRequest,
  proto.pactus.GetNewAddressResponse,
  /**
   * @param {!proto.pactus.GetNewAddressRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.GetNewAddressResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.GetNewAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.GetNewAddressResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.GetNewAddressResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.getNewAddress =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/GetNewAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetNewAddress,
      callback);
};


/**
 * @param {!proto.pactus.GetNewAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.GetNewAddressResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.getNewAddress =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/GetNewAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetNewAddress);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.GetAddressHistoryRequest,
 *   !proto.pactus.GetAddressHistoryResponse>}
 */
const methodDescriptor_Wallet_GetAddressHistory = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/GetAddressHistory',
  grpc.web.MethodType.UNARY,
  proto.pactus.GetAddressHistoryRequest,
  proto.pactus.GetAddressHistoryResponse,
  /**
   * @param {!proto.pactus.GetAddressHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.GetAddressHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.GetAddressHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.GetAddressHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.GetAddressHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.getAddressHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/GetAddressHistory',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetAddressHistory,
      callback);
};


/**
 * @param {!proto.pactus.GetAddressHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.GetAddressHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.getAddressHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/GetAddressHistory',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetAddressHistory);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.SignMessageRequest,
 *   !proto.pactus.SignMessageResponse>}
 */
const methodDescriptor_Wallet_SignMessage = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/SignMessage',
  grpc.web.MethodType.UNARY,
  proto.pactus.SignMessageRequest,
  proto.pactus.SignMessageResponse,
  /**
   * @param {!proto.pactus.SignMessageRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.SignMessageResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.SignMessageRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.SignMessageResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.SignMessageResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.signMessage =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/SignMessage',
      request,
      metadata || {},
      methodDescriptor_Wallet_SignMessage,
      callback);
};


/**
 * @param {!proto.pactus.SignMessageRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.SignMessageResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.signMessage =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/SignMessage',
      request,
      metadata || {},
      methodDescriptor_Wallet_SignMessage);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.GetTotalStakeRequest,
 *   !proto.pactus.GetTotalStakeResponse>}
 */
const methodDescriptor_Wallet_GetTotalStake = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/GetTotalStake',
  grpc.web.MethodType.UNARY,
  proto.pactus.GetTotalStakeRequest,
  proto.pactus.GetTotalStakeResponse,
  /**
   * @param {!proto.pactus.GetTotalStakeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.GetTotalStakeResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.GetTotalStakeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.GetTotalStakeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.GetTotalStakeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.getTotalStake =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/GetTotalStake',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetTotalStake,
      callback);
};


/**
 * @param {!proto.pactus.GetTotalStakeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.GetTotalStakeResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.getTotalStake =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/GetTotalStake',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetTotalStake);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.GetAddressInfoRequest,
 *   !proto.pactus.GetAddressInfoResponse>}
 */
const methodDescriptor_Wallet_GetAddressInfo = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/GetAddressInfo',
  grpc.web.MethodType.UNARY,
  proto.pactus.GetAddressInfoRequest,
  proto.pactus.GetAddressInfoResponse,
  /**
   * @param {!proto.pactus.GetAddressInfoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.GetAddressInfoResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.GetAddressInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.GetAddressInfoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.GetAddressInfoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.getAddressInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/GetAddressInfo',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetAddressInfo,
      callback);
};


/**
 * @param {!proto.pactus.GetAddressInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.GetAddressInfoResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.getAddressInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/GetAddressInfo',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetAddressInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.SetAddressLabelRequest,
 *   !proto.pactus.SetAddressLabelResponse>}
 */
const methodDescriptor_Wallet_SetAddressLabel = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/SetAddressLabel',
  grpc.web.MethodType.UNARY,
  proto.pactus.SetAddressLabelRequest,
  proto.pactus.SetAddressLabelResponse,
  /**
   * @param {!proto.pactus.SetAddressLabelRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.SetAddressLabelResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.SetAddressLabelRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.SetAddressLabelResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.SetAddressLabelResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.setAddressLabel =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/SetAddressLabel',
      request,
      metadata || {},
      methodDescriptor_Wallet_SetAddressLabel,
      callback);
};


/**
 * @param {!proto.pactus.SetAddressLabelRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.SetAddressLabelResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.setAddressLabel =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/SetAddressLabel',
      request,
      metadata || {},
      methodDescriptor_Wallet_SetAddressLabel);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.ListWalletRequest,
 *   !proto.pactus.ListWalletResponse>}
 */
const methodDescriptor_Wallet_ListWallet = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/ListWallet',
  grpc.web.MethodType.UNARY,
  proto.pactus.ListWalletRequest,
  proto.pactus.ListWalletResponse,
  /**
   * @param {!proto.pactus.ListWalletRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.ListWalletResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.ListWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.ListWalletResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.ListWalletResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.listWallet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/ListWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_ListWallet,
      callback);
};


/**
 * @param {!proto.pactus.ListWalletRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.ListWalletResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.listWallet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/ListWallet',
      request,
      metadata || {},
      methodDescriptor_Wallet_ListWallet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.GetWalletInfoRequest,
 *   !proto.pactus.GetWalletInfoResponse>}
 */
const methodDescriptor_Wallet_GetWalletInfo = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/GetWalletInfo',
  grpc.web.MethodType.UNARY,
  proto.pactus.GetWalletInfoRequest,
  proto.pactus.GetWalletInfoResponse,
  /**
   * @param {!proto.pactus.GetWalletInfoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.GetWalletInfoResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.GetWalletInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.GetWalletInfoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.GetWalletInfoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.getWalletInfo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/GetWalletInfo',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetWalletInfo,
      callback);
};


/**
 * @param {!proto.pactus.GetWalletInfoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.GetWalletInfoResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.getWalletInfo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/GetWalletInfo',
      request,
      metadata || {},
      methodDescriptor_Wallet_GetWalletInfo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pactus.ListAddressRequest,
 *   !proto.pactus.ListAddressResponse>}
 */
const methodDescriptor_Wallet_ListAddress = new grpc.web.MethodDescriptor(
  '/pactus.Wallet/ListAddress',
  grpc.web.MethodType.UNARY,
  proto.pactus.ListAddressRequest,
  proto.pactus.ListAddressResponse,
  /**
   * @param {!proto.pactus.ListAddressRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pactus.ListAddressResponse.deserializeBinary
);


/**
 * @param {!proto.pactus.ListAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pactus.ListAddressResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pactus.ListAddressResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pactus.WalletClient.prototype.listAddress =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pactus.Wallet/ListAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_ListAddress,
      callback);
};


/**
 * @param {!proto.pactus.ListAddressRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pactus.ListAddressResponse>}
 *     Promise that resolves to the response
 */
proto.pactus.WalletPromiseClient.prototype.listAddress =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pactus.Wallet/ListAddress',
      request,
      metadata || {},
      methodDescriptor_Wallet_ListAddress);
};


module.exports = proto.pactus;

