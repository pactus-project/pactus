// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: utils.proto

package pactus

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for signing a message with a private key.
type SignMessageWithPrivateKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The private key to sign the message.
	PrivateKey string `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// The message content to be signed.
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignMessageWithPrivateKeyRequest) Reset() {
	*x = SignMessageWithPrivateKeyRequest{}
	mi := &file_utils_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignMessageWithPrivateKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageWithPrivateKeyRequest) ProtoMessage() {}

func (x *SignMessageWithPrivateKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utils_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageWithPrivateKeyRequest.ProtoReflect.Descriptor instead.
func (*SignMessageWithPrivateKeyRequest) Descriptor() ([]byte, []int) {
	return file_utils_proto_rawDescGZIP(), []int{0}
}

func (x *SignMessageWithPrivateKeyRequest) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *SignMessageWithPrivateKeyRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Response message contains the signature generated from the message.
type SignMessageWithPrivateKeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resulting signature in hexadecimal format.
	Signature     string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignMessageWithPrivateKeyResponse) Reset() {
	*x = SignMessageWithPrivateKeyResponse{}
	mi := &file_utils_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignMessageWithPrivateKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageWithPrivateKeyResponse) ProtoMessage() {}

func (x *SignMessageWithPrivateKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utils_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageWithPrivateKeyResponse.ProtoReflect.Descriptor instead.
func (*SignMessageWithPrivateKeyResponse) Descriptor() ([]byte, []int) {
	return file_utils_proto_rawDescGZIP(), []int{1}
}

func (x *SignMessageWithPrivateKeyResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

// Request message for verifying a message signature.
type VerifyMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The original message content that was signed.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The signature to verify in hexadecimal format.
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// The public key of the signer.
	PublicKey     string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyMessageRequest) Reset() {
	*x = VerifyMessageRequest{}
	mi := &file_utils_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageRequest) ProtoMessage() {}

func (x *VerifyMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utils_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageRequest.ProtoReflect.Descriptor instead.
func (*VerifyMessageRequest) Descriptor() ([]byte, []int) {
	return file_utils_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VerifyMessageRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *VerifyMessageRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

// Response message contains the verification result.
type VerifyMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Boolean indicating whether the signature is valid for the given message and public key.
	IsValid       bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyMessageResponse) Reset() {
	*x = VerifyMessageResponse{}
	mi := &file_utils_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageResponse) ProtoMessage() {}

func (x *VerifyMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utils_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageResponse.ProtoReflect.Descriptor instead.
func (*VerifyMessageResponse) Descriptor() ([]byte, []int) {
	return file_utils_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyMessageResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

// Request message for aggregating multiple BLS public keys.
type PublicKeyAggregationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of BLS public keys to be aggregated.
	PublicKeys    []string `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKeyAggregationRequest) Reset() {
	*x = PublicKeyAggregationRequest{}
	mi := &file_utils_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKeyAggregationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyAggregationRequest) ProtoMessage() {}

func (x *PublicKeyAggregationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utils_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyAggregationRequest.ProtoReflect.Descriptor instead.
func (*PublicKeyAggregationRequest) Descriptor() ([]byte, []int) {
	return file_utils_proto_rawDescGZIP(), []int{4}
}

func (x *PublicKeyAggregationRequest) GetPublicKeys() []string {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

// Response message contains the aggregated BLS public key result.
type PublicKeyAggregationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The aggregated BLS public key.
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// The blockchain address derived from the aggregated public key.
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKeyAggregationResponse) Reset() {
	*x = PublicKeyAggregationResponse{}
	mi := &file_utils_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKeyAggregationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyAggregationResponse) ProtoMessage() {}

func (x *PublicKeyAggregationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utils_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyAggregationResponse.ProtoReflect.Descriptor instead.
func (*PublicKeyAggregationResponse) Descriptor() ([]byte, []int) {
	return file_utils_proto_rawDescGZIP(), []int{5}
}

func (x *PublicKeyAggregationResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *PublicKeyAggregationResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request message for aggregating multiple BLS signatures.
type SignatureAggregationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of BLS signatures to be aggregated.
	Signatures    []string `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatureAggregationRequest) Reset() {
	*x = SignatureAggregationRequest{}
	mi := &file_utils_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatureAggregationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureAggregationRequest) ProtoMessage() {}

func (x *SignatureAggregationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_utils_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureAggregationRequest.ProtoReflect.Descriptor instead.
func (*SignatureAggregationRequest) Descriptor() ([]byte, []int) {
	return file_utils_proto_rawDescGZIP(), []int{6}
}

func (x *SignatureAggregationRequest) GetSignatures() []string {
	if x != nil {
		return x.Signatures
	}
	return nil
}

// Response message contains the aggregated BLS signature.
type SignatureAggregationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The aggregated BLS signature in hexadecimal format.
	Signature     string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatureAggregationResponse) Reset() {
	*x = SignatureAggregationResponse{}
	mi := &file_utils_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatureAggregationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureAggregationResponse) ProtoMessage() {}

func (x *SignatureAggregationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_utils_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureAggregationResponse.ProtoReflect.Descriptor instead.
func (*SignatureAggregationResponse) Descriptor() ([]byte, []int) {
	return file_utils_proto_rawDescGZIP(), []int{7}
}

func (x *SignatureAggregationResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

var File_utils_proto protoreflect.FileDescriptor

const file_utils_proto_rawDesc = "" +
	"\n" +
	"\vutils.proto\x12\x06pactus\"]\n" +
	" SignMessageWithPrivateKeyRequest\x12\x1f\n" +
	"\vprivate_key\x18\x01 \x01(\tR\n" +
	"privateKey\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"A\n" +
	"!SignMessageWithPrivateKeyResponse\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\tR\tsignature\"m\n" +
	"\x14VerifyMessageRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\tR\tsignature\x12\x1d\n" +
	"\n" +
	"public_key\x18\x03 \x01(\tR\tpublicKey\"2\n" +
	"\x15VerifyMessageResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\">\n" +
	"\x1bPublicKeyAggregationRequest\x12\x1f\n" +
	"\vpublic_keys\x18\x01 \x03(\tR\n" +
	"publicKeys\"W\n" +
	"\x1cPublicKeyAggregationResponse\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\tR\tpublicKey\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"=\n" +
	"\x1bSignatureAggregationRequest\x12\x1e\n" +
	"\n" +
	"signatures\x18\x01 \x03(\tR\n" +
	"signatures\"<\n" +
	"\x1cSignatureAggregationResponse\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\tR\tsignature2\x8d\x03\n" +
	"\x05Utils\x12p\n" +
	"\x19SignMessageWithPrivateKey\x12(.pactus.SignMessageWithPrivateKeyRequest\x1a).pactus.SignMessageWithPrivateKeyResponse\x12L\n" +
	"\rVerifyMessage\x12\x1c.pactus.VerifyMessageRequest\x1a\x1d.pactus.VerifyMessageResponse\x12a\n" +
	"\x14PublicKeyAggregation\x12#.pactus.PublicKeyAggregationRequest\x1a$.pactus.PublicKeyAggregationResponse\x12a\n" +
	"\x14SignatureAggregation\x12#.pactus.SignatureAggregationRequest\x1a$.pactus.SignatureAggregationResponseB:\n" +
	"\x06pactusZ0github.com/pactus-project/pactus/www/grpc/pactusb\x06proto3"

var (
	file_utils_proto_rawDescOnce sync.Once
	file_utils_proto_rawDescData []byte
)

func file_utils_proto_rawDescGZIP() []byte {
	file_utils_proto_rawDescOnce.Do(func() {
		file_utils_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_utils_proto_rawDesc), len(file_utils_proto_rawDesc)))
	})
	return file_utils_proto_rawDescData
}

var file_utils_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_utils_proto_goTypes = []any{
	(*SignMessageWithPrivateKeyRequest)(nil),  // 0: pactus.SignMessageWithPrivateKeyRequest
	(*SignMessageWithPrivateKeyResponse)(nil), // 1: pactus.SignMessageWithPrivateKeyResponse
	(*VerifyMessageRequest)(nil),              // 2: pactus.VerifyMessageRequest
	(*VerifyMessageResponse)(nil),             // 3: pactus.VerifyMessageResponse
	(*PublicKeyAggregationRequest)(nil),       // 4: pactus.PublicKeyAggregationRequest
	(*PublicKeyAggregationResponse)(nil),      // 5: pactus.PublicKeyAggregationResponse
	(*SignatureAggregationRequest)(nil),       // 6: pactus.SignatureAggregationRequest
	(*SignatureAggregationResponse)(nil),      // 7: pactus.SignatureAggregationResponse
}
var file_utils_proto_depIdxs = []int32{
	0, // 0: pactus.Utils.SignMessageWithPrivateKey:input_type -> pactus.SignMessageWithPrivateKeyRequest
	2, // 1: pactus.Utils.VerifyMessage:input_type -> pactus.VerifyMessageRequest
	4, // 2: pactus.Utils.PublicKeyAggregation:input_type -> pactus.PublicKeyAggregationRequest
	6, // 3: pactus.Utils.SignatureAggregation:input_type -> pactus.SignatureAggregationRequest
	1, // 4: pactus.Utils.SignMessageWithPrivateKey:output_type -> pactus.SignMessageWithPrivateKeyResponse
	3, // 5: pactus.Utils.VerifyMessage:output_type -> pactus.VerifyMessageResponse
	5, // 6: pactus.Utils.PublicKeyAggregation:output_type -> pactus.PublicKeyAggregationResponse
	7, // 7: pactus.Utils.SignatureAggregation:output_type -> pactus.SignatureAggregationResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_utils_proto_init() }
func file_utils_proto_init() {
	if File_utils_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_utils_proto_rawDesc), len(file_utils_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_utils_proto_goTypes,
		DependencyIndexes: file_utils_proto_depIdxs,
		MessageInfos:      file_utils_proto_msgTypes,
	}.Build()
	File_utils_proto = out.File
	file_utils_proto_goTypes = nil
	file_utils_proto_depIdxs = nil
}
