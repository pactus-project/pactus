// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wallet.proto

package pactus

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AddressType defines different types of blockchain addresses.
type AddressType int32

const (
	// Treasury address type.
	// Should not be used to generate new addresses.
	AddressType_ADDRESS_TYPE_TREASURY AddressType = 0
	// Validator address type used for validator nodes.
	AddressType_ADDRESS_TYPE_VALIDATOR AddressType = 1
	// Account address type with BLS signature scheme.
	AddressType_ADDRESS_TYPE_BLS_ACCOUNT AddressType = 2
	// Account address type with Ed25519 signature scheme.
	// Note: Generating a new Ed25519 address requires the wallet password.
	AddressType_ADDRESS_TYPE_ED25519_ACCOUNT AddressType = 3
)

// Enum value maps for AddressType.
var (
	AddressType_name = map[int32]string{
		0: "ADDRESS_TYPE_TREASURY",
		1: "ADDRESS_TYPE_VALIDATOR",
		2: "ADDRESS_TYPE_BLS_ACCOUNT",
		3: "ADDRESS_TYPE_ED25519_ACCOUNT",
	}
	AddressType_value = map[string]int32{
		"ADDRESS_TYPE_TREASURY":        0,
		"ADDRESS_TYPE_VALIDATOR":       1,
		"ADDRESS_TYPE_BLS_ACCOUNT":     2,
		"ADDRESS_TYPE_ED25519_ACCOUNT": 3,
	}
)

func (x AddressType) Enum() *AddressType {
	p := new(AddressType)
	*p = x
	return p
}

func (x AddressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddressType) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_proto_enumTypes[0].Descriptor()
}

func (AddressType) Type() protoreflect.EnumType {
	return &file_wallet_proto_enumTypes[0]
}

func (x AddressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddressType.Descriptor instead.
func (AddressType) EnumDescriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{0}
}

// AddressInfo contains detailed information about a wallet address.
type AddressInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The address string.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// The public key associated with the address.
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// A human-readable label associated with the address.
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	// The Hierarchical Deterministic (HD) path of the address within the wallet.
	Path          string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressInfo) Reset() {
	*x = AddressInfo{}
	mi := &file_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressInfo) ProtoMessage() {}

func (x *AddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressInfo.ProtoReflect.Descriptor instead.
func (*AddressInfo) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *AddressInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressInfo) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *AddressInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AddressInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// HistoryInfo contains transaction history details for an address.
type HistoryInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The transaction ID in hexadecimal format.
	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// Unix timestamp of when the transaction was confirmed.
	Time uint32 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	// The type of transaction payload.
	PayloadType string `protobuf:"bytes,3,opt,name=payload_type,json=payloadType,proto3" json:"payload_type,omitempty"`
	// Human-readable description of the transaction.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The transaction amount in NanoPAC.
	Amount        int64 `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryInfo) Reset() {
	*x = HistoryInfo{}
	mi := &file_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryInfo) ProtoMessage() {}

func (x *HistoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryInfo.ProtoReflect.Descriptor instead.
func (*HistoryInfo) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *HistoryInfo) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *HistoryInfo) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *HistoryInfo) GetPayloadType() string {
	if x != nil {
		return x.PayloadType
	}
	return ""
}

func (x *HistoryInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *HistoryInfo) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// Request message for retrieving address transaction history.
type GetAddressHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet containing the address.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// The address to retrieve history for.
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAddressHistoryRequest) Reset() {
	*x = GetAddressHistoryRequest{}
	mi := &file_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAddressHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressHistoryRequest) ProtoMessage() {}

func (x *GetAddressHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetAddressHistoryRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *GetAddressHistoryRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *GetAddressHistoryRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Response message contains address transaction history.
type GetAddressHistoryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of all historical transactions associated with the address.
	HistoryInfo   []*HistoryInfo `protobuf:"bytes,1,rep,name=history_info,json=historyInfo,proto3" json:"history_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAddressHistoryResponse) Reset() {
	*x = GetAddressHistoryResponse{}
	mi := &file_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAddressHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressHistoryResponse) ProtoMessage() {}

func (x *GetAddressHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetAddressHistoryResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *GetAddressHistoryResponse) GetHistoryInfo() []*HistoryInfo {
	if x != nil {
		return x.HistoryInfo
	}
	return nil
}

// Request message for generating a new wallet address.
type GetNewAddressRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet to generate a new address.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// The type of address to generate.
	AddressType AddressType `protobuf:"varint,2,opt,name=address_type,json=addressType,proto3,enum=pactus.AddressType" json:"address_type,omitempty"`
	// A label for the new address.
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	// Password for the new address. It's required when address_type is Ed25519 type.
	Password      string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewAddressRequest) Reset() {
	*x = GetNewAddressRequest{}
	mi := &file_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewAddressRequest) ProtoMessage() {}

func (x *GetNewAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewAddressRequest.ProtoReflect.Descriptor instead.
func (*GetNewAddressRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *GetNewAddressRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *GetNewAddressRequest) GetAddressType() AddressType {
	if x != nil {
		return x.AddressType
	}
	return AddressType_ADDRESS_TYPE_TREASURY
}

func (x *GetNewAddressRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GetNewAddressRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Response message contains newly generated address information.
type GetNewAddressResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet where address was generated.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// Detailed information about the new address.
	AddressInfo   *AddressInfo `protobuf:"bytes,2,opt,name=address_info,json=addressInfo,proto3" json:"address_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewAddressResponse) Reset() {
	*x = GetNewAddressResponse{}
	mi := &file_wallet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewAddressResponse) ProtoMessage() {}

func (x *GetNewAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewAddressResponse.ProtoReflect.Descriptor instead.
func (*GetNewAddressResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *GetNewAddressResponse) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *GetNewAddressResponse) GetAddressInfo() *AddressInfo {
	if x != nil {
		return x.AddressInfo
	}
	return nil
}

// Request message for restoring a wallet from mnemonic (seed phrase).
type RestoreWalletRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name for the restored wallet.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// The mnemonic (seed phrase) for wallet recovery.
	Mnemonic string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	// Password to secure the restored wallet.
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreWalletRequest) Reset() {
	*x = RestoreWalletRequest{}
	mi := &file_wallet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreWalletRequest) ProtoMessage() {}

func (x *RestoreWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreWalletRequest.ProtoReflect.Descriptor instead.
func (*RestoreWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *RestoreWalletRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *RestoreWalletRequest) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *RestoreWalletRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Response message confirming wallet restoration.
type RestoreWalletResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the restored wallet.
	WalletName    string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreWalletResponse) Reset() {
	*x = RestoreWalletResponse{}
	mi := &file_wallet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreWalletResponse) ProtoMessage() {}

func (x *RestoreWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreWalletResponse.ProtoReflect.Descriptor instead.
func (*RestoreWalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *RestoreWalletResponse) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

// Request message for creating a new wallet.
type CreateWalletRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name for the new wallet.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// Password to secure the new wallet.
	Password      string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletRequest) Reset() {
	*x = CreateWalletRequest{}
	mi := &file_wallet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRequest) ProtoMessage() {}

func (x *CreateWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *CreateWalletRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *CreateWalletRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Response message contains wallet recovery mnemonic (seed phrase).
type CreateWalletResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The mnemonic (seed phrase) for wallet recovery.
	Mnemonic      string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletResponse) Reset() {
	*x = CreateWalletResponse{}
	mi := &file_wallet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletResponse) ProtoMessage() {}

func (x *CreateWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletResponse.ProtoReflect.Descriptor instead.
func (*CreateWalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *CreateWalletResponse) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

// Request message for loading an existing wallet.
type LoadWalletRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet to load.
	WalletName    string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadWalletRequest) Reset() {
	*x = LoadWalletRequest{}
	mi := &file_wallet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadWalletRequest) ProtoMessage() {}

func (x *LoadWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadWalletRequest.ProtoReflect.Descriptor instead.
func (*LoadWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *LoadWalletRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

// Response message confirming wallet loaded.
type LoadWalletResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the loaded wallet.
	WalletName    string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadWalletResponse) Reset() {
	*x = LoadWalletResponse{}
	mi := &file_wallet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadWalletResponse) ProtoMessage() {}

func (x *LoadWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadWalletResponse.ProtoReflect.Descriptor instead.
func (*LoadWalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *LoadWalletResponse) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

// Request message for unloading a wallet.
type UnloadWalletRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet to unload.
	WalletName    string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnloadWalletRequest) Reset() {
	*x = UnloadWalletRequest{}
	mi := &file_wallet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnloadWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadWalletRequest) ProtoMessage() {}

func (x *UnloadWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadWalletRequest.ProtoReflect.Descriptor instead.
func (*UnloadWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *UnloadWalletRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

// Response message confirming wallet unloading.
type UnloadWalletResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the unloaded wallet.
	WalletName    string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnloadWalletResponse) Reset() {
	*x = UnloadWalletResponse{}
	mi := &file_wallet_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnloadWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadWalletResponse) ProtoMessage() {}

func (x *UnloadWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadWalletResponse.ProtoReflect.Descriptor instead.
func (*UnloadWalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{13}
}

func (x *UnloadWalletResponse) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

// Request message for obtaining the validator address associated with a public key.
type GetValidatorAddressRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The public key of the validator.
	PublicKey     string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetValidatorAddressRequest) Reset() {
	*x = GetValidatorAddressRequest{}
	mi := &file_wallet_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetValidatorAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValidatorAddressRequest) ProtoMessage() {}

func (x *GetValidatorAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValidatorAddressRequest.ProtoReflect.Descriptor instead.
func (*GetValidatorAddressRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *GetValidatorAddressRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

// Response message containing the validator address corresponding to a public key.
type GetValidatorAddressResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The validator address associated with the public key.
	Address       string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetValidatorAddressResponse) Reset() {
	*x = GetValidatorAddressResponse{}
	mi := &file_wallet_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetValidatorAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValidatorAddressResponse) ProtoMessage() {}

func (x *GetValidatorAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValidatorAddressResponse.ProtoReflect.Descriptor instead.
func (*GetValidatorAddressResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{15}
}

func (x *GetValidatorAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request message for signing a raw transaction.
type SignRawTransactionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet used for signing.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// The raw transaction data to be signed.
	RawTransaction string `protobuf:"bytes,2,opt,name=raw_transaction,json=rawTransaction,proto3" json:"raw_transaction,omitempty"`
	// Wallet password required for signing.
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignRawTransactionRequest) Reset() {
	*x = SignRawTransactionRequest{}
	mi := &file_wallet_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignRawTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRawTransactionRequest) ProtoMessage() {}

func (x *SignRawTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRawTransactionRequest.ProtoReflect.Descriptor instead.
func (*SignRawTransactionRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{16}
}

func (x *SignRawTransactionRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *SignRawTransactionRequest) GetRawTransaction() string {
	if x != nil {
		return x.RawTransaction
	}
	return ""
}

func (x *SignRawTransactionRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Response message contains the transaction ID and signed raw transaction.
type SignRawTransactionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the signed transaction.
	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// The signed raw transaction data.
	SignedRawTransaction string `protobuf:"bytes,2,opt,name=signed_raw_transaction,json=signedRawTransaction,proto3" json:"signed_raw_transaction,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SignRawTransactionResponse) Reset() {
	*x = SignRawTransactionResponse{}
	mi := &file_wallet_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignRawTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRawTransactionResponse) ProtoMessage() {}

func (x *SignRawTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRawTransactionResponse.ProtoReflect.Descriptor instead.
func (*SignRawTransactionResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{17}
}

func (x *SignRawTransactionResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *SignRawTransactionResponse) GetSignedRawTransaction() string {
	if x != nil {
		return x.SignedRawTransaction
	}
	return ""
}

// Request message for obtaining the total available balance of a wallet.
type GetTotalBalanceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet to get the total balance.
	WalletName    string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTotalBalanceRequest) Reset() {
	*x = GetTotalBalanceRequest{}
	mi := &file_wallet_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTotalBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalBalanceRequest) ProtoMessage() {}

func (x *GetTotalBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetTotalBalanceRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{18}
}

func (x *GetTotalBalanceRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

// Response message contains the total available balance of the wallet.
type GetTotalBalanceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the queried wallet.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// The total balance of the wallet in NanoPAC.
	TotalBalance  int64 `protobuf:"varint,2,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTotalBalanceResponse) Reset() {
	*x = GetTotalBalanceResponse{}
	mi := &file_wallet_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTotalBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalBalanceResponse) ProtoMessage() {}

func (x *GetTotalBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetTotalBalanceResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{19}
}

func (x *GetTotalBalanceResponse) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *GetTotalBalanceResponse) GetTotalBalance() int64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

// Request message to sign an arbitrary message.
type SignMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet to sign with.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// Wallet password required for signing.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// The address whose private key should be used for signing the message.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// The arbitrary message to be signed.
	Message       string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignMessageRequest) Reset() {
	*x = SignMessageRequest{}
	mi := &file_wallet_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageRequest) ProtoMessage() {}

func (x *SignMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageRequest.ProtoReflect.Descriptor instead.
func (*SignMessageRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{20}
}

func (x *SignMessageRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *SignMessageRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignMessageRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SignMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Response message contains message signature.
type SignMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The signature in hexadecimal format.
	Signature     string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignMessageResponse) Reset() {
	*x = SignMessageResponse{}
	mi := &file_wallet_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageResponse) ProtoMessage() {}

func (x *SignMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageResponse.ProtoReflect.Descriptor instead.
func (*SignMessageResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{21}
}

func (x *SignMessageResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

// Request message for obtaining the total stake of a wallet.
type GetTotalStakeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet to get the total stake.
	WalletName    string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTotalStakeRequest) Reset() {
	*x = GetTotalStakeRequest{}
	mi := &file_wallet_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTotalStakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalStakeRequest) ProtoMessage() {}

func (x *GetTotalStakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalStakeRequest.ProtoReflect.Descriptor instead.
func (*GetTotalStakeRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{22}
}

func (x *GetTotalStakeRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

// Response message contains the total stake of the wallet.
type GetTotalStakeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the queried wallet.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// The total stake amount in NanoPAC.
	TotalStake    int64 `protobuf:"varint,2,opt,name=total_stake,json=totalStake,proto3" json:"total_stake,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTotalStakeResponse) Reset() {
	*x = GetTotalStakeResponse{}
	mi := &file_wallet_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTotalStakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalStakeResponse) ProtoMessage() {}

func (x *GetTotalStakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalStakeResponse.ProtoReflect.Descriptor instead.
func (*GetTotalStakeResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{23}
}

func (x *GetTotalStakeResponse) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *GetTotalStakeResponse) GetTotalStake() int64 {
	if x != nil {
		return x.TotalStake
	}
	return 0
}

// Request message for getting address information.
type GetAddressInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet containing the address.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// The address to query.
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAddressInfoRequest) Reset() {
	*x = GetAddressInfoRequest{}
	mi := &file_wallet_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAddressInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressInfoRequest) ProtoMessage() {}

func (x *GetAddressInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAddressInfoRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{24}
}

func (x *GetAddressInfoRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *GetAddressInfoRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Response message contains address details.
type GetAddressInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet containing the address.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// The queried address.
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// The address label.
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	// The public key of the address.
	PublicKey string `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// The Hierarchical Deterministic (HD) path of the address.
	Path          string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAddressInfoResponse) Reset() {
	*x = GetAddressInfoResponse{}
	mi := &file_wallet_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAddressInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressInfoResponse) ProtoMessage() {}

func (x *GetAddressInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAddressInfoResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{25}
}

func (x *GetAddressInfoResponse) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *GetAddressInfoResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetAddressInfoResponse) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GetAddressInfoResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *GetAddressInfoResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Request message for setting address label.
type SetAddressLabelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet containing the address.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// Wallet password required for modification.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// The address to label.
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// The new label for the address.
	Label         string `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAddressLabelRequest) Reset() {
	*x = SetAddressLabelRequest{}
	mi := &file_wallet_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAddressLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAddressLabelRequest) ProtoMessage() {}

func (x *SetAddressLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAddressLabelRequest.ProtoReflect.Descriptor instead.
func (*SetAddressLabelRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{26}
}

func (x *SetAddressLabelRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *SetAddressLabelRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SetAddressLabelRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SetAddressLabelRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// Response message for address label update.
type SetAddressLabelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAddressLabelResponse) Reset() {
	*x = SetAddressLabelResponse{}
	mi := &file_wallet_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAddressLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAddressLabelResponse) ProtoMessage() {}

func (x *SetAddressLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAddressLabelResponse.ProtoReflect.Descriptor instead.
func (*SetAddressLabelResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{27}
}

// Request message for listing all wallets.
type ListWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWalletRequest) Reset() {
	*x = ListWalletRequest{}
	mi := &file_wallet_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletRequest) ProtoMessage() {}

func (x *ListWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletRequest.ProtoReflect.Descriptor instead.
func (*ListWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{28}
}

// Response message contains wallet names.
type ListWalletResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Array of wallet names.
	Wallets       []string `protobuf:"bytes,1,rep,name=wallets,proto3" json:"wallets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWalletResponse) Reset() {
	*x = ListWalletResponse{}
	mi := &file_wallet_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletResponse) ProtoMessage() {}

func (x *ListWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletResponse.ProtoReflect.Descriptor instead.
func (*ListWalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{29}
}

func (x *ListWalletResponse) GetWallets() []string {
	if x != nil {
		return x.Wallets
	}
	return nil
}

// Request message for getting wallet information.
type GetWalletInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet to query.
	WalletName    string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletInfoRequest) Reset() {
	*x = GetWalletInfoRequest{}
	mi := &file_wallet_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletInfoRequest) ProtoMessage() {}

func (x *GetWalletInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletInfoRequest.ProtoReflect.Descriptor instead.
func (*GetWalletInfoRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{30}
}

func (x *GetWalletInfoRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

// Response message contains wallet details.
type GetWalletInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the wallet to query.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// The wallet format version.
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// The network the wallet is connected to (e.g., mainnet, testnet).
	Network string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	// Indicates if the wallet is encrypted.
	Encrypted bool `protobuf:"varint,4,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	// A unique identifier of the wallet.
	Uuid string `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Unix timestamp of wallet creation.
	CreatedAt     int64 `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletInfoResponse) Reset() {
	*x = GetWalletInfoResponse{}
	mi := &file_wallet_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletInfoResponse) ProtoMessage() {}

func (x *GetWalletInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletInfoResponse.ProtoReflect.Descriptor instead.
func (*GetWalletInfoResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{31}
}

func (x *GetWalletInfoResponse) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *GetWalletInfoResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetWalletInfoResponse) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetWalletInfoResponse) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

func (x *GetWalletInfoResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetWalletInfoResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// Request message for listing wallet addresses.
type ListAddressRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the queried wallet.
	WalletName    string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAddressRequest) Reset() {
	*x = ListAddressRequest{}
	mi := &file_wallet_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAddressRequest) ProtoMessage() {}

func (x *ListAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAddressRequest.ProtoReflect.Descriptor instead.
func (*ListAddressRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{32}
}

func (x *ListAddressRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

// Response message contains wallet addresses.
type ListAddressResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the queried wallet.
	WalletName string `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	// ist of all addresses in the wallet with their details.
	Data          []*AddressInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAddressResponse) Reset() {
	*x = ListAddressResponse{}
	mi := &file_wallet_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAddressResponse) ProtoMessage() {}

func (x *ListAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAddressResponse.ProtoReflect.Descriptor instead.
func (*ListAddressResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{33}
}

func (x *ListAddressResponse) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *ListAddressResponse) GetData() []*AddressInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_wallet_proto protoreflect.FileDescriptor

const file_wallet_proto_rawDesc = "" +
	"\n" +
	"\fwallet.proto\x12\x06pactus\"p\n" +
	"\vAddressInfo\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\"\xa5\x01\n" +
	"\vHistoryInfo\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x12\n" +
	"\x04time\x18\x02 \x01(\rR\x04time\x12!\n" +
	"\fpayload_type\x18\x03 \x01(\tR\vpayloadType\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\x03R\x06amount\"U\n" +
	"\x18GetAddressHistoryRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"S\n" +
	"\x19GetAddressHistoryResponse\x126\n" +
	"\fhistory_info\x18\x01 \x03(\v2\x13.pactus.HistoryInfoR\vhistoryInfo\"\xa1\x01\n" +
	"\x14GetNewAddressRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x126\n" +
	"\faddress_type\x18\x02 \x01(\x0e2\x13.pactus.AddressTypeR\vaddressType\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\"p\n" +
	"\x15GetNewAddressResponse\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x126\n" +
	"\faddress_info\x18\x02 \x01(\v2\x13.pactus.AddressInfoR\vaddressInfo\"o\n" +
	"\x14RestoreWalletRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12\x1a\n" +
	"\bmnemonic\x18\x02 \x01(\tR\bmnemonic\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\"8\n" +
	"\x15RestoreWalletResponse\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\"R\n" +
	"\x13CreateWalletRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\"2\n" +
	"\x14CreateWalletResponse\x12\x1a\n" +
	"\bmnemonic\x18\x02 \x01(\tR\bmnemonic\"4\n" +
	"\x11LoadWalletRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\"5\n" +
	"\x12LoadWalletResponse\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\"6\n" +
	"\x13UnloadWalletRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\"7\n" +
	"\x14UnloadWalletResponse\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\";\n" +
	"\x1aGetValidatorAddressRequest\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\tR\tpublicKey\"7\n" +
	"\x1bGetValidatorAddressResponse\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"\x81\x01\n" +
	"\x19SignRawTransactionRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12'\n" +
	"\x0fraw_transaction\x18\x02 \x01(\tR\x0erawTransaction\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\"y\n" +
	"\x1aSignRawTransactionResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x124\n" +
	"\x16signed_raw_transaction\x18\x02 \x01(\tR\x14signedRawTransaction\"9\n" +
	"\x16GetTotalBalanceRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\"_\n" +
	"\x17GetTotalBalanceResponse\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12#\n" +
	"\rtotal_balance\x18\x02 \x01(\x03R\ftotalBalance\"\x85\x01\n" +
	"\x12SignMessageRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"3\n" +
	"\x13SignMessageResponse\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\tR\tsignature\"7\n" +
	"\x14GetTotalStakeRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\"Y\n" +
	"\x15GetTotalStakeResponse\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12\x1f\n" +
	"\vtotal_stake\x18\x02 \x01(\x03R\n" +
	"totalStake\"R\n" +
	"\x15GetAddressInfoRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"\x9c\x01\n" +
	"\x16GetAddressInfoResponse\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\x12\x1d\n" +
	"\n" +
	"public_key\x18\x04 \x01(\tR\tpublicKey\x12\x12\n" +
	"\x04path\x18\x05 \x01(\tR\x04path\"\x85\x01\n" +
	"\x16SetAddressLabelRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x18\n" +
	"\aaddress\x18\x04 \x01(\tR\aaddress\x12\x14\n" +
	"\x05label\x18\x05 \x01(\tR\x05label\"\x19\n" +
	"\x17SetAddressLabelResponse\"\x13\n" +
	"\x11ListWalletRequest\".\n" +
	"\x12ListWalletResponse\x12\x18\n" +
	"\awallets\x18\x01 \x03(\tR\awallets\"7\n" +
	"\x14GetWalletInfoRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\"\xbd\x01\n" +
	"\x15GetWalletInfoResponse\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\x12\x18\n" +
	"\anetwork\x18\x03 \x01(\tR\anetwork\x12\x1c\n" +
	"\tencrypted\x18\x04 \x01(\bR\tencrypted\x12\x12\n" +
	"\x04uuid\x18\x05 \x01(\tR\x04uuid\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\"5\n" +
	"\x12ListAddressRequest\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\"_\n" +
	"\x13ListAddressResponse\x12\x1f\n" +
	"\vwallet_name\x18\x01 \x01(\tR\n" +
	"walletName\x12'\n" +
	"\x04data\x18\x02 \x03(\v2\x13.pactus.AddressInfoR\x04data*\x84\x01\n" +
	"\vAddressType\x12\x19\n" +
	"\x15ADDRESS_TYPE_TREASURY\x10\x00\x12\x1a\n" +
	"\x16ADDRESS_TYPE_VALIDATOR\x10\x01\x12\x1c\n" +
	"\x18ADDRESS_TYPE_BLS_ACCOUNT\x10\x02\x12 \n" +
	"\x1cADDRESS_TYPE_ED25519_ACCOUNT\x10\x032\x80\n" +
	"\n" +
	"\x06Wallet\x12I\n" +
	"\fCreateWallet\x12\x1b.pactus.CreateWalletRequest\x1a\x1c.pactus.CreateWalletResponse\x12L\n" +
	"\rRestoreWallet\x12\x1c.pactus.RestoreWalletRequest\x1a\x1d.pactus.RestoreWalletResponse\x12C\n" +
	"\n" +
	"LoadWallet\x12\x19.pactus.LoadWalletRequest\x1a\x1a.pactus.LoadWalletResponse\x12I\n" +
	"\fUnloadWallet\x12\x1b.pactus.UnloadWalletRequest\x1a\x1c.pactus.UnloadWalletResponse\x12R\n" +
	"\x0fGetTotalBalance\x12\x1e.pactus.GetTotalBalanceRequest\x1a\x1f.pactus.GetTotalBalanceResponse\x12[\n" +
	"\x12SignRawTransaction\x12!.pactus.SignRawTransactionRequest\x1a\".pactus.SignRawTransactionResponse\x12^\n" +
	"\x13GetValidatorAddress\x12\".pactus.GetValidatorAddressRequest\x1a#.pactus.GetValidatorAddressResponse\x12L\n" +
	"\rGetNewAddress\x12\x1c.pactus.GetNewAddressRequest\x1a\x1d.pactus.GetNewAddressResponse\x12X\n" +
	"\x11GetAddressHistory\x12 .pactus.GetAddressHistoryRequest\x1a!.pactus.GetAddressHistoryResponse\x12F\n" +
	"\vSignMessage\x12\x1a.pactus.SignMessageRequest\x1a\x1b.pactus.SignMessageResponse\x12L\n" +
	"\rGetTotalStake\x12\x1c.pactus.GetTotalStakeRequest\x1a\x1d.pactus.GetTotalStakeResponse\x12O\n" +
	"\x0eGetAddressInfo\x12\x1d.pactus.GetAddressInfoRequest\x1a\x1e.pactus.GetAddressInfoResponse\x12R\n" +
	"\x0fSetAddressLabel\x12\x1e.pactus.SetAddressLabelRequest\x1a\x1f.pactus.SetAddressLabelResponse\x12C\n" +
	"\n" +
	"ListWallet\x12\x19.pactus.ListWalletRequest\x1a\x1a.pactus.ListWalletResponse\x12L\n" +
	"\rGetWalletInfo\x12\x1c.pactus.GetWalletInfoRequest\x1a\x1d.pactus.GetWalletInfoResponse\x12F\n" +
	"\vListAddress\x12\x1a.pactus.ListAddressRequest\x1a\x1b.pactus.ListAddressResponseB:\n" +
	"\x06pactusZ0github.com/pactus-project/pactus/www/grpc/pactusb\x06proto3"

var (
	file_wallet_proto_rawDescOnce sync.Once
	file_wallet_proto_rawDescData []byte
)

func file_wallet_proto_rawDescGZIP() []byte {
	file_wallet_proto_rawDescOnce.Do(func() {
		file_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wallet_proto_rawDesc), len(file_wallet_proto_rawDesc)))
	})
	return file_wallet_proto_rawDescData
}

var file_wallet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_wallet_proto_goTypes = []any{
	(AddressType)(0),                    // 0: pactus.AddressType
	(*AddressInfo)(nil),                 // 1: pactus.AddressInfo
	(*HistoryInfo)(nil),                 // 2: pactus.HistoryInfo
	(*GetAddressHistoryRequest)(nil),    // 3: pactus.GetAddressHistoryRequest
	(*GetAddressHistoryResponse)(nil),   // 4: pactus.GetAddressHistoryResponse
	(*GetNewAddressRequest)(nil),        // 5: pactus.GetNewAddressRequest
	(*GetNewAddressResponse)(nil),       // 6: pactus.GetNewAddressResponse
	(*RestoreWalletRequest)(nil),        // 7: pactus.RestoreWalletRequest
	(*RestoreWalletResponse)(nil),       // 8: pactus.RestoreWalletResponse
	(*CreateWalletRequest)(nil),         // 9: pactus.CreateWalletRequest
	(*CreateWalletResponse)(nil),        // 10: pactus.CreateWalletResponse
	(*LoadWalletRequest)(nil),           // 11: pactus.LoadWalletRequest
	(*LoadWalletResponse)(nil),          // 12: pactus.LoadWalletResponse
	(*UnloadWalletRequest)(nil),         // 13: pactus.UnloadWalletRequest
	(*UnloadWalletResponse)(nil),        // 14: pactus.UnloadWalletResponse
	(*GetValidatorAddressRequest)(nil),  // 15: pactus.GetValidatorAddressRequest
	(*GetValidatorAddressResponse)(nil), // 16: pactus.GetValidatorAddressResponse
	(*SignRawTransactionRequest)(nil),   // 17: pactus.SignRawTransactionRequest
	(*SignRawTransactionResponse)(nil),  // 18: pactus.SignRawTransactionResponse
	(*GetTotalBalanceRequest)(nil),      // 19: pactus.GetTotalBalanceRequest
	(*GetTotalBalanceResponse)(nil),     // 20: pactus.GetTotalBalanceResponse
	(*SignMessageRequest)(nil),          // 21: pactus.SignMessageRequest
	(*SignMessageResponse)(nil),         // 22: pactus.SignMessageResponse
	(*GetTotalStakeRequest)(nil),        // 23: pactus.GetTotalStakeRequest
	(*GetTotalStakeResponse)(nil),       // 24: pactus.GetTotalStakeResponse
	(*GetAddressInfoRequest)(nil),       // 25: pactus.GetAddressInfoRequest
	(*GetAddressInfoResponse)(nil),      // 26: pactus.GetAddressInfoResponse
	(*SetAddressLabelRequest)(nil),      // 27: pactus.SetAddressLabelRequest
	(*SetAddressLabelResponse)(nil),     // 28: pactus.SetAddressLabelResponse
	(*ListWalletRequest)(nil),           // 29: pactus.ListWalletRequest
	(*ListWalletResponse)(nil),          // 30: pactus.ListWalletResponse
	(*GetWalletInfoRequest)(nil),        // 31: pactus.GetWalletInfoRequest
	(*GetWalletInfoResponse)(nil),       // 32: pactus.GetWalletInfoResponse
	(*ListAddressRequest)(nil),          // 33: pactus.ListAddressRequest
	(*ListAddressResponse)(nil),         // 34: pactus.ListAddressResponse
}
var file_wallet_proto_depIdxs = []int32{
	2,  // 0: pactus.GetAddressHistoryResponse.history_info:type_name -> pactus.HistoryInfo
	0,  // 1: pactus.GetNewAddressRequest.address_type:type_name -> pactus.AddressType
	1,  // 2: pactus.GetNewAddressResponse.address_info:type_name -> pactus.AddressInfo
	1,  // 3: pactus.ListAddressResponse.data:type_name -> pactus.AddressInfo
	9,  // 4: pactus.Wallet.CreateWallet:input_type -> pactus.CreateWalletRequest
	7,  // 5: pactus.Wallet.RestoreWallet:input_type -> pactus.RestoreWalletRequest
	11, // 6: pactus.Wallet.LoadWallet:input_type -> pactus.LoadWalletRequest
	13, // 7: pactus.Wallet.UnloadWallet:input_type -> pactus.UnloadWalletRequest
	19, // 8: pactus.Wallet.GetTotalBalance:input_type -> pactus.GetTotalBalanceRequest
	17, // 9: pactus.Wallet.SignRawTransaction:input_type -> pactus.SignRawTransactionRequest
	15, // 10: pactus.Wallet.GetValidatorAddress:input_type -> pactus.GetValidatorAddressRequest
	5,  // 11: pactus.Wallet.GetNewAddress:input_type -> pactus.GetNewAddressRequest
	3,  // 12: pactus.Wallet.GetAddressHistory:input_type -> pactus.GetAddressHistoryRequest
	21, // 13: pactus.Wallet.SignMessage:input_type -> pactus.SignMessageRequest
	23, // 14: pactus.Wallet.GetTotalStake:input_type -> pactus.GetTotalStakeRequest
	25, // 15: pactus.Wallet.GetAddressInfo:input_type -> pactus.GetAddressInfoRequest
	27, // 16: pactus.Wallet.SetAddressLabel:input_type -> pactus.SetAddressLabelRequest
	29, // 17: pactus.Wallet.ListWallet:input_type -> pactus.ListWalletRequest
	31, // 18: pactus.Wallet.GetWalletInfo:input_type -> pactus.GetWalletInfoRequest
	33, // 19: pactus.Wallet.ListAddress:input_type -> pactus.ListAddressRequest
	10, // 20: pactus.Wallet.CreateWallet:output_type -> pactus.CreateWalletResponse
	8,  // 21: pactus.Wallet.RestoreWallet:output_type -> pactus.RestoreWalletResponse
	12, // 22: pactus.Wallet.LoadWallet:output_type -> pactus.LoadWalletResponse
	14, // 23: pactus.Wallet.UnloadWallet:output_type -> pactus.UnloadWalletResponse
	20, // 24: pactus.Wallet.GetTotalBalance:output_type -> pactus.GetTotalBalanceResponse
	18, // 25: pactus.Wallet.SignRawTransaction:output_type -> pactus.SignRawTransactionResponse
	16, // 26: pactus.Wallet.GetValidatorAddress:output_type -> pactus.GetValidatorAddressResponse
	6,  // 27: pactus.Wallet.GetNewAddress:output_type -> pactus.GetNewAddressResponse
	4,  // 28: pactus.Wallet.GetAddressHistory:output_type -> pactus.GetAddressHistoryResponse
	22, // 29: pactus.Wallet.SignMessage:output_type -> pactus.SignMessageResponse
	24, // 30: pactus.Wallet.GetTotalStake:output_type -> pactus.GetTotalStakeResponse
	26, // 31: pactus.Wallet.GetAddressInfo:output_type -> pactus.GetAddressInfoResponse
	28, // 32: pactus.Wallet.SetAddressLabel:output_type -> pactus.SetAddressLabelResponse
	30, // 33: pactus.Wallet.ListWallet:output_type -> pactus.ListWalletResponse
	32, // 34: pactus.Wallet.GetWalletInfo:output_type -> pactus.GetWalletInfoResponse
	34, // 35: pactus.Wallet.ListAddress:output_type -> pactus.ListAddressResponse
	20, // [20:36] is the sub-list for method output_type
	4,  // [4:20] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_wallet_proto_init() }
func file_wallet_proto_init() {
	if File_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wallet_proto_rawDesc), len(file_wallet_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallet_proto_goTypes,
		DependencyIndexes: file_wallet_proto_depIdxs,
		EnumInfos:         file_wallet_proto_enumTypes,
		MessageInfos:      file_wallet_proto_msgTypes,
	}.Build()
	File_wallet_proto = out.File
	file_wallet_proto_goTypes = nil
	file_wallet_proto_depIdxs = nil
}
